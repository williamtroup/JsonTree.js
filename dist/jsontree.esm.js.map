{"version":3,"sources":["../src/ts/enum.ts","../src/ts/is.ts","../src/ts/data.ts","../src/ts/dom.ts","../src/jsontree.ts"],"names":["Is","Data","String","result","DomElement"],"mappings":"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","sourcesContent":["/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        enum.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport const enum Char {\n    empty = \"\",\n    space = \" \",\n    dash = \"-\",\n    zero = \"0\",\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        is.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function definedDecimal( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\" && object % 1 !== 0;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        data.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export namespace String {\n        export function newGuid() : string {\n            const result: string[] = [];\n    \n            for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n                if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                    result.push( Char.dash );\n                }\n    \n                const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n                result.push( character );\n            }\n    \n            return result.join( Char.empty );\n        }\n    \n        export function padNumber( number: number, length: number = 1 ) : string {\n            const numberString: string = number.toString();\n            let numberResult: string = numberString;\n    \n            if ( numberString.length < length ) {\n                const arrayLength: number = ( length - numberString.length ) + 1;\n    \n                numberResult = Array( arrayLength ).join( \"0\" ) + numberString;\n            }\n    \n            return numberResult;\n        }\n    }\n\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: string[] ) : string[] {\n        let result: string[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        dom.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace DomElement {\n    export function create( container: HTMLElement, type: string, className: string = Char.empty, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Is.defined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) {\n        element.classList.add( className );\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        jsontree.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type BindingOptions,\n    type Events,\n    type Ignore,\n    type Title,\n    type Configuration } from \"./ts/type\";\n\nimport { PublicApi } from \"./ts/api\";\nimport { Data } from \"./ts/data\";\nimport { Is } from \"./ts/is\";\nimport { DomElement } from \"./ts/dom\";\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Data\n    let _elements_Data: Record<string, { options: BindingOptions; data: any }> = {};\n\n    \n\n\n    function createComma( bindingOptions: BindingOptions, objectTypeValue: HTMLElement, isLastItem: boolean ) : void {\n        if ( bindingOptions.showCommas && !isLastItem ) {\n            DomElement.createWithHTML( objectTypeValue, \"span\", \"comma\", \",\" );\n        }\n    }\n    \n    function getIndexName( bindingOptions: BindingOptions, index: number, largestValue: number ) : string {\n        let result: string = bindingOptions.useZeroIndexingForArrays ? index.toString() : (index + 1).toString();\n    \n        if ( !bindingOptions.addArrayIndexPadding ) {\n            result = Data.String.padNumber( parseInt( result ), largestValue.toString().length );\n        }\n    \n        return result;\n    }\n    \n    function getFixedValue( value: number, length: number ) : string {\n        const regExp: RegExp = new RegExp( \"^-?\\\\d+(?:.\\\\d{0,\" + ( length || -1 ) + \"})?\" );\n    \n        return value.toString().match( regExp )?.[ 0 ] || \"\";\n    }\n    \n    function isHexColor( value: string ) : boolean {\n        let valid: boolean = value.length >= 2 && value.length <= 7;\n    \n        if ( valid && value[ 0 ] === \"#\" ) {\n            valid = isNaN( +value.substring( 1, value.length - 1 ) );\n        }\n    \n        return valid;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        var options = Data.getDefaultObject( newOptions, {} as BindingOptions );\n        options.data = Data.getDefaultObject( options.data, null! );\n        options.showCounts = Data.getDefaultBoolean( options.showCounts, true );\n        options.useZeroIndexingForArrays = Data.getDefaultBoolean( options.useZeroIndexingForArrays, true );\n        options.dateTimeFormat = Data.getDefaultString( options.dateTimeFormat, \"{dd}{o} {mmmm} {yyyy} {hh}:{MM}:{ss}\" );\n        options.showArrowToggles = Data.getDefaultBoolean( options.showArrowToggles, true );\n        options.showStringQuotes = Data.getDefaultBoolean( options.showStringQuotes, true );\n        options.showAllAsClosed = Data.getDefaultBoolean( options.showAllAsClosed, false );\n        options.sortPropertyNames = Data.getDefaultBoolean( options.sortPropertyNames, true );\n        options.sortPropertyNamesInAlphabeticalOrder = Data.getDefaultBoolean( options.sortPropertyNamesInAlphabeticalOrder, true );\n        options.showCommas = Data.getDefaultBoolean( options.showCommas, false );\n        options.reverseArrayValues = Data.getDefaultBoolean( options.reverseArrayValues, false );\n        options.addArrayIndexPadding = Data.getDefaultBoolean( options.addArrayIndexPadding, false );\n        options.showValueColors = Data.getDefaultBoolean( options.showValueColors, true );\n        options.maximumDecimalPlaces = Data.getDefaultNumber( options.maximumDecimalPlaces, 2 );\n        options.maximumStringLength = Data.getDefaultNumber( options.maximumStringLength, 0 );\n        options.showStringHexColors = Data.getDefaultBoolean( options.showStringHexColors, false );\n\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionIgnore( options );\n        options = buildAttributeOptionCustomTriggers( options );\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = Data.getDefaultObject( options.title, {} as Title );\n        options.title!.text = Data.getDefaultString( options.title!.text, \"JsonTree.js\" );\n        options.title!.show = Data.getDefaultBoolean( options.title!.show, true );\n        options.title!.showTreeControls = Data.getDefaultBoolean( options.title!.showTreeControls, true );\n        options.title!.showCopyButton = Data.getDefaultBoolean( options.title!.showCopyButton, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionIgnore( options: BindingOptions ) : BindingOptions {\n        options.ignore = Data.getDefaultObject( options.ignore, {} as Ignore );\n        options.ignore!.nullValues = Data.getDefaultBoolean( options.ignore!.nullValues, false );\n        options.ignore!.functionValues = Data.getDefaultBoolean( options.ignore!.functionValues, false );\n        options.ignore!.unknownValues = Data.getDefaultBoolean( options.ignore!.unknownValues, false );\n        options.ignore!.booleanValues = Data.getDefaultBoolean( options.ignore!.booleanValues, false );\n        options.ignore!.decimalValues = Data.getDefaultBoolean( options.ignore!.decimalValues, false );\n        options.ignore!.numberValues = Data.getDefaultBoolean( options.ignore!.numberValues, false );\n        options.ignore!.stringValues = Data.getDefaultBoolean( options.ignore!.stringValues, false );\n        options.ignore!.dateValues = Data.getDefaultBoolean( options.ignore!.dateValues, false );\n        options.ignore!.objectValues = Data.getDefaultBoolean( options.ignore!.objectValues, false );\n        options.ignore!.arrayValues = Data.getDefaultBoolean( options.ignore!.arrayValues, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options: BindingOptions ) : BindingOptions {\n        options.events = Data.getDefaultObject( options.events, {} as Events );\n        options.events!.onBeforeRender = Data.getDefaultFunction( options.events!.onBeforeRender, null! );\n        options.events!.onRenderComplete = Data.getDefaultFunction( options.events!.onRenderComplete, null! );\n        options.events!.onValueClick = Data.getDefaultFunction( options.events!.onValueClick, null! );\n        options.events!.onRefresh = Data.getDefaultFunction( options.events!.onRefresh, null! );\n        options.events!.onCopyAll = Data.getDefaultFunction( options.events!.onCopyAll, null! );\n        options.events!.onOpenAll = Data.getDefaultFunction( options.events!.onOpenAll, null! );\n        options.events!.onCloseAll = Data.getDefaultFunction( options.events!.onCloseAll, null! );\n        options.events!.onDestroy = Data.getDefaultFunction( options.events!.onDestroy, null! );\n        options.events!.onBooleanRender = Data.getDefaultFunction( options.events!.onBooleanRender, null! );\n        options.events!.onDecimalRender = Data.getDefaultFunction( options.events!.onDecimalRender, null! );\n        options.events!.onNumberRender =Data.getDefaultFunction( options.events!.onNumberRender, null! );\n        options.events!.onStringRender = Data.getDefaultFunction( options.events!.onStringRender, null! );\n        options.events!.onDateRender = Data.getDefaultFunction( options.events!.onDateRender, null! );\n        options.events!.onFunctionRender = Data.getDefaultFunction( options.events!.onFunctionRender, null! );\n        options.events!.onNullRender = Data.getDefaultFunction( options.events!.onNullRender, null! );\n        options.events!.onUnknownRender = Data.getDefaultFunction( options.events!.onUnknownRender, null! );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : void {\n        if ( Is.definedFunction( triggerFunction ) ) {\n            triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1: any ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2: any ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText!.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        refreshAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        render: function ( element: HTMLElement, options: Object ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        renderAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        openAll: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        closeAll: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroy: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        destroyAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( configuration: any ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function (): string[] {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        getVersion: function (): string {\n            throw new Error(\"Function not implemented.\");\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize JsonTree.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n\n    } )();\n} )();"]}