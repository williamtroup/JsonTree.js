{"version":3,"sources":["../src/ts/enum.ts","../src/ts/is.ts","../src/ts/data.ts","../src/ts/dom.ts","../src/ts/datetime.ts","../src/ts/constant.ts","../src/jsontree.ts"],"names":["Is","Data","String","result","DomElement","DateTime","Constants"],"mappings":"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","sourcesContent":["/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        enum.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport const enum Char {\n    empty = \"\",\n    space = \" \",\n    dash = \"-\",\n    zero = \"0\",\n    hash = \"#\",\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        is.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function definedDecimal( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\" && object % 1 !== 0;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        data.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export namespace String {\n        export function newGuid() : string {\n            const result: string[] = [];\n    \n            for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n                if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                    result.push( Char.dash );\n                }\n    \n                const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n                result.push( character );\n            }\n    \n            return result.join( Char.empty );\n        }\n    \n        export function padNumber( number: number, length: number = 1 ) : string {\n            const numberString: string = number.toString();\n            let numberResult: string = numberString;\n    \n            if ( numberString.length < length ) {\n                const arrayLength: number = ( length - numberString.length ) + 1;\n    \n                numberResult = Array( arrayLength ).join( \"0\" ) + numberString;\n            }\n    \n            return numberResult;\n        }\n    }\n\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: string[] ) : string[] {\n        let result: string[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        dom.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace DomElement {\n    export function create( container: HTMLElement, type: string, className: string = Char.empty, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Is.defined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) {\n        element.classList.add( className );\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        datetime.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Data } from \"./data\";\nimport { Configuration } from \"./type\";\n\n\nexport namespace DateTime {\n    export function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    export function getDayOrdinal( configuration: Configuration, value: number ) : string {\n        let result: string = configuration.thText!;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = configuration.stText!;\n        } else if ( value === 22 || value === 2 ) {\n            result = configuration.ndText!;\n        } else if ( value === 23 || value === 3 ) {\n            result = configuration.rdText!;\n        }\n\n        return result;\n    }\n\n    export function getCustomFormattedDateText( configuration: Configuration, date: Date , dateFormat: string) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{hh}\", Data.String.padNumber( date.getHours(), 2 ) );\n        result = result.replace( \"{h}\", date.getHours().toString() );\n    \n        result = result.replace( \"{MM}\", Data.String.padNumber( date.getMinutes(), 2 ) );\n        result = result.replace( \"{M}\", date.getMinutes().toString() );\n    \n        result = result.replace( \"{ss}\", Data.String.padNumber( date.getSeconds(), 2 ) );\n        result = result.replace( \"{s}\", date.getSeconds().toString() );\n    \n        result = result.replace( \"{dddd}\", configuration.dayNames![ weekDayNumber ] );\n        result = result.replace( \"{ddd}\", configuration.dayNamesAbbreviated![ weekDayNumber ] );\n        result = result.replace( \"{dd}\", Data.String.padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n    \n        result = result.replace( \"{o}\", getDayOrdinal( configuration, date.getDate() ) );\n    \n        result = result.replace( \"{mmmm}\", configuration.monthNames![ date.getMonth() ] );\n        result = result.replace( \"{mmm}\", configuration.monthNamesAbbreviated![ date.getMonth() ] );\n        result = result.replace( \"{mm}\", Data.String.padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n    \n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", Number.parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        constant.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport namespace Constants {\n    export const JSONTREE_JS_ATTRIBUTE_NAME = \"data-jsontree-js\";\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        jsontree.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type BindingOptions,\n    type Events,\n    type Ignore,\n    type Title,\n    type Configuration, \n    type CurrentView } from \"./ts/type\";\n\nimport { PublicApi } from \"./ts/api\";\nimport { Data } from \"./ts/data\";\nimport { Is } from \"./ts/is\";\nimport { DomElement } from \"./ts/dom\";\nimport { Char } from \"./ts/enum\";\nimport { DateTime } from \"./ts/datetime\";\nimport { Constants } from \"./ts/constant\";\n\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\ntype JsonTreeData = {\n    options: BindingOptions;\n    data: any;\n};\n\ntype JsonTree = Record<string, JsonTreeData>;\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Data\n    let _elements_Data: JsonTree = {} as JsonTree;\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Rendering\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function render() : void {\n        const tagTypes: string[] = _configuration.domElementTypes as string[];\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = document.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                if ( !renderElement( elements[ elementIndex ] ) ) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function renderElement( element: HTMLElement ) : boolean {\n        let result: boolean = true;\n\n        if ( Is.defined( element ) && element.hasAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME ) ) {\n            const bindingOptionsData: string = element.getAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME )!;\n\n            if ( Is.definedString( bindingOptionsData ) ) {\n                const bindingOptions: StringToJson = getObjectFromString( bindingOptionsData );\n\n                if ( bindingOptions.parsed && Is.definedObject( bindingOptions.object ) ) {\n                    renderControl( renderBindingOptions( bindingOptions.object, element ) );\n\n                } else {\n                    if ( !_configuration.safeMode ) {\n                        console.error( _configuration.attributeNotValidErrorText!.replace( \"{{attribute_name}}\", Constants.JSONTREE_JS_ATTRIBUTE_NAME ) );\n                        result = false;\n                    }\n                }\n\n            } else {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.attributeNotSetErrorText!.replace( \"{{attribute_name}}\", Constants.JSONTREE_JS_ATTRIBUTE_NAME ) );\n                    result = false;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function renderBindingOptions( data: any, element: HTMLElement ) : BindingOptions {\n        const bindingOptions: BindingOptions = buildAttributeOptions( data );\n        bindingOptions._currentView = {} as CurrentView;\n        bindingOptions._currentView.element = element;\n\n        return bindingOptions;\n    }\n\n    function renderControl( bindingOptions: BindingOptions ) : void {\n        fireCustomTriggerEvent( bindingOptions.events!.onBeforeRender!, bindingOptions._currentView.element );\n\n        if ( !Is.definedString( bindingOptions._currentView.element.id ) ) {\n            bindingOptions._currentView.element.id = Data.String.newGuid();\n        }\n\n        bindingOptions._currentView.element.className = \"json-tree-js\";\n        bindingOptions._currentView.element.removeAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME );\n\n        if ( !_elements_Data.hasOwnProperty( bindingOptions._currentView.element.id ) ) {\n            _elements_Data[ bindingOptions._currentView.element.id ] = {} as JsonTreeData;\n            _elements_Data[ bindingOptions._currentView.element.id ].options = bindingOptions;\n            _elements_Data[ bindingOptions._currentView.element.id ].data = bindingOptions.data;\n\n            delete bindingOptions.data;\n        }\n\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events!.onRenderComplete!, bindingOptions._currentView.element );\n    }\n\n    function renderControlContainer( bindingOptions: BindingOptions ) : void {\n        const data: any = _elements_Data[ bindingOptions._currentView.element.id ].data;\n\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n\n        renderControlTitleBar( bindingOptions );\n\n        if ( Is.definedObject( data ) && !Is.definedArray( data ) ) {\n            renderObject( bindingOptions._currentView.element, bindingOptions, data );\n        } else if ( Is.definedArray( data ) ) {\n            renderArray( bindingOptions._currentView.element, bindingOptions, data );\n        }\n    }\n\n    \n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Title Bar\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlTitleBar( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.title!.show || bindingOptions.title!.showTreeControls || bindingOptions.title!.showCopyButton ) {\n            const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"title-bar\" );\n            const controls: HTMLElement = DomElement.create( titleBar, \"div\", \"controls\" );\n        \n            if ( bindingOptions.title!.show ) {\n                DomElement.createWithHTML( titleBar, \"div\", \"title\", bindingOptions.title!.text!, controls );\n            }\n\n            if ( bindingOptions.title!.showCopyButton ) {\n                const copy: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"copy-all\", _configuration.copyAllButtonText! );\n\n                copy.onclick = () => {\n                    const copyData: string = JSON.stringify( _elements_Data[ bindingOptions._currentView.element.id ].data );\n\n                    navigator.clipboard.writeText( copyData );\n\n                    fireCustomTriggerEvent( bindingOptions.events!.onCopyAll!, copyData );\n                };\n            }\n\n            if ( bindingOptions.title!.showTreeControls ) {\n                const openAll: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"openAll\", _configuration.openAllButtonText! );\n                const closeAll: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"closeAll\", _configuration.closeAllButtonText! );\n\n                openAll.onclick = () => {\n                    openAllNodes( bindingOptions );\n                };\n\n                closeAll.onclick = () => {\n                    closeAllNodes( bindingOptions );\n                };\n            }\n        }\n    }\n\n    function openAllNodes( bindingOptions: BindingOptions ) : void {\n        bindingOptions.showAllAsClosed = false;\n\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events!.onOpenAll!, bindingOptions._currentView.element );\n    }\n\n    function closeAllNodes( bindingOptions: BindingOptions ) : void {\n        bindingOptions.showAllAsClosed = true;\n\n        renderControlContainer( bindingOptions );\n        fireCustomTriggerEvent( bindingOptions.events!.onCloseAll!, bindingOptions._currentView.element );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Tree\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderObject( container: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const objectTypeTitle: HTMLElement = DomElement.create( container, \"div\", \"object-type-title\" );\n        const objectTypeContents: HTMLElement = DomElement.create( container, \"div\", \"object-type-contents\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeTitle, \"div\", \"down-arrow\" ) : null!;\n        const propertyCount: number = renderObjectValues( arrow, objectTypeContents, bindingOptions, data );\n\n        DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"object\" : Char.empty, _configuration.objectText! );\n\n        if ( bindingOptions.showCounts && propertyCount > 0 ) {\n            DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"object count\" : \"count\", \"{\" + propertyCount + \"}\" );\n        }\n    }\n\n    function renderArray( container: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const objectTypeTitle: HTMLElement = DomElement.create( container, \"div\", \"object-type-title\" );\n        const objectTypeContents: HTMLElement = DomElement.create( container, \"div\", \"object-type-contents\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeTitle, \"div\", \"down-arrow\" ) : null!;\n\n        DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"array\" : Char.empty, _configuration.arrayText! );\n\n        renderArrayValues( arrow, objectTypeContents, bindingOptions, data );\n\n        if ( bindingOptions.showCounts ) {\n            DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"array count\" : \"count\", \"[\" + data.length + \"]\" );\n        }\n    }\n\n    function renderObjectValues( arrow: HTMLElement, objectTypeContents: HTMLElement, bindingOptions: BindingOptions, data: any ) : number {\n        let propertyCount: number = 0;\n        let properties: string[] = [];\n\n        for ( let key in data ) {\n            if ( data.hasOwnProperty( key ) ) {\n                properties.push( key );\n            }\n        }\n\n        if ( bindingOptions.sortPropertyNames ) {\n            properties = properties.sort();\n\n            if ( !bindingOptions.sortPropertyNamesInAlphabeticalOrder ) {\n                properties = properties.reverse();\n            }\n        }\n\n        const propertiesLength: number = properties.length;\n\n        for ( let propertyIndex: number = 0; propertyIndex < propertiesLength; propertyIndex++ ) {\n            const propertyName: string = properties[ propertyIndex ];\n\n            if ( data.hasOwnProperty( propertyName ) ) {\n                renderValue( objectTypeContents, bindingOptions, propertyName, data[ propertyName ], propertyIndex === propertiesLength - 1 );\n                propertyCount++;\n            }\n        }\n\n        addArrowEvent( bindingOptions, arrow, objectTypeContents );\n\n        return propertyCount;\n    }\n\n    function renderArrayValues( arrow: HTMLElement, objectTypeContents: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const dataLength: number = data.length;\n\n        if ( !bindingOptions.reverseArrayValues ) {\n            for ( let dataIndex1: number = 0; dataIndex1 < dataLength; dataIndex1++ ) {\n                renderValue( objectTypeContents, bindingOptions, getIndexName( bindingOptions, dataIndex1, dataLength ), data[ dataIndex1 ], dataIndex1 === dataLength - 1 );\n            }\n\n        } else {\n            for ( let dataIndex2: number = dataLength; dataIndex2--; ) {\n                renderValue( objectTypeContents, bindingOptions, getIndexName( bindingOptions, dataIndex2, dataLength ), data[ dataIndex2 ], dataIndex2 === 0 );\n            }\n        }\n\n        addArrowEvent( bindingOptions, arrow, objectTypeContents );\n    }\n\n    function renderValue( container: HTMLElement, bindingOptions: BindingOptions, name: string, value: any, isLastItem: boolean ) : void {\n        const objectTypeValue: HTMLElement = DomElement.create( container, \"div\", \"object-type-value\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeValue, \"div\", \"no-arrow\" ) : null!;\n        let valueClass: string = null!;\n        let valueElement: HTMLElement = null!;\n        let ignored: boolean = false;\n        let type: string = null!;\n        let addClickEvent: boolean = true;\n\n        DomElement.createWithHTML( objectTypeValue, \"span\", \"title\", name );\n        DomElement.createWithHTML( objectTypeValue, \"span\", \"split\", \":\" );\n\n        if ( !Is.defined( value ) ) {\n            if ( !bindingOptions.ignore!.nullValues ) {\n                valueClass = bindingOptions.showValueColors ? \"null\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, \"null\" );\n                addClickEvent = false;\n\n                if ( Is.definedFunction( bindingOptions.events!.onNullRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onNullRender!, valueElement );\n                }\n\n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedFunction( value ) ) {\n            if ( !bindingOptions.ignore!.functionValues ) {\n                valueClass = bindingOptions.showValueColors ? \"function\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, getFunctionName( value ) );\n                type = \"function\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onFunctionRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onFunctionRender!, valueElement );\n                }\n            \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedBoolean( value ) ) {\n            if ( !bindingOptions.ignore!.booleanValues ) {\n                valueClass = bindingOptions.showValueColors ? \"boolean\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value );\n                type = \"boolean\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onBooleanRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onBooleanRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedDecimal( value ) ) {\n            if ( !bindingOptions.ignore!.decimalValues ) {\n                const newValue: string = getFixedValue( value, bindingOptions.maximumDecimalPlaces! );\n\n                valueClass = bindingOptions.showValueColors ? \"decimal\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, newValue );\n                type = \"decimal\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onDecimalRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onDecimalRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedNumber( value ) ) {\n            if ( !bindingOptions.ignore!.numberValues ) {\n                valueClass = bindingOptions.showValueColors ? \"number\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value );\n                type = \"number\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onNumberRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onNumberRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedString( value ) ) {\n            if ( !bindingOptions.ignore!.stringValues ) {\n                let color: string = null!;\n\n                if ( bindingOptions.showValueColors && bindingOptions.showStringHexColors && isHexColor( value ) ) {\n                    color = value;\n\n                } else {\n                    if ( bindingOptions.maximumStringLength! > 0 && value.length > bindingOptions.maximumStringLength! ) {\n                        value = value.substring( 0, bindingOptions.maximumStringLength ) + _configuration.ellipsisText;\n                    }\n                }\n\n                const newStringValue: string = bindingOptions.showStringQuotes ? \"\\\"\" + value + \"\\\"\" : value;\n    \n                valueClass = bindingOptions.showValueColors ? \"string\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, newStringValue );\n                type = \"string\";\n\n                if ( Is.definedString( color ) ) {\n                    valueElement.style.color = color;\n                }\n    \n                if ( Is.definedFunction( bindingOptions.events!.onStringRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onStringRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedDate( value ) ) {\n            if ( !bindingOptions.ignore!.dateValues ) {\n                valueClass = bindingOptions.showValueColors ? \"date\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, DateTime.getCustomFormattedDateText( _configuration, value, bindingOptions.dateTimeFormat! ) );\n                type = \"date\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onDateRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onDateRender!, valueElement );\n                }\n    \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedObject( value ) && !Is.definedArray( value ) ) {\n            if ( !bindingOptions.ignore!.objectValues ) {\n                const objectTitle: HTMLElement = DomElement.create( objectTypeValue, \"span\", bindingOptions.showValueColors ? \"object\" : Char.empty );\n                const objectTypeContents: HTMLElement = DomElement.create( objectTypeValue, \"div\", \"object-type-contents\" );\n                const propertyCount: number = renderObjectValues( arrow, objectTypeContents, bindingOptions, value );\n\n                DomElement.createWithHTML( objectTitle, \"span\", \"title\", _configuration.objectText! );\n\n                if ( bindingOptions.showCounts && propertyCount > 0 ) {\n                    DomElement.createWithHTML( objectTitle, \"span\", \"count\", \"{\" + propertyCount + \"}\" );\n                }\n\n                createComma( bindingOptions, objectTitle, isLastItem );\n\n                type = \"object\";\n\n            } else {\n                ignored = true;\n            }\n\n\n        } else if ( Is.definedArray( value ) ) {\n            if ( !bindingOptions.ignore!.arrayValues ) {\n                const arrayTitle: HTMLElement = DomElement.create( objectTypeValue, \"span\", bindingOptions.showValueColors ? \"array\" : Char.empty );\n                const arrayTypeContents: HTMLElement = DomElement.create( objectTypeValue, \"div\", \"object-type-contents\" );\n\n                DomElement.createWithHTML( arrayTitle, \"span\", \"title\", _configuration.arrayText! );\n\n                if ( bindingOptions.showCounts ) {\n                    DomElement.createWithHTML( arrayTitle, \"span\", \"count\", \"[\" + value.length + \"]\" );\n                }\n\n                createComma( bindingOptions, arrayTitle, isLastItem );\n                renderArrayValues( arrow, arrayTypeContents, bindingOptions, value );\n\n                type = \"array\";\n                \n            } else {\n                ignored = true;\n            }\n\n        } else {\n            if ( !bindingOptions.ignore!.unknownValues ) {\n                valueClass = bindingOptions.showValueColors ? \"unknown\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value.toString() );\n                type = \"unknown\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onUnknownRender ) ) {\n                    fireCustomTriggerEvent( bindingOptions.events!.onUnknownRender!, valueElement );\n                }\n\n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n        }\n\n        if ( ignored ) {\n            container.removeChild( objectTypeValue );\n            \n        } else {\n            if ( Is.defined( valueElement ) ) {\n                addValueClickEvent( bindingOptions, valueElement, value, type, addClickEvent );\n            }\n        }\n    }\n\n    function addValueClickEvent( bindingOptions: BindingOptions, valueElement: HTMLElement, value: any, type: string, addClickEvent: boolean ) : void {\n        if ( addClickEvent && Is.definedFunction( bindingOptions.events!.onValueClick ) ) {\n            valueElement.onclick = () => {\n                fireCustomTriggerEvent( bindingOptions.events!.onValueClick!, value, type );\n            };\n\n        } else {\n            DomElement.addClass( valueElement, \"no-hover\" );\n        }\n    }\n\n    function addArrowEvent( bindingOptions: BindingOptions, arrow: HTMLElement, objectTypeContents: HTMLElement ) : void {\n        if ( Is.defined( arrow ) ) {\n            arrow.onclick = () => {\n                if ( arrow.className === \"down-arrow\" ) {\n                    objectTypeContents.style.display = \"none\";\n                    arrow.className = \"right-arrow\";\n                } else {\n                    objectTypeContents.style.display = \"block\";\n                    arrow.className = \"down-arrow\";\n                }\n            };\n\n            if ( bindingOptions.showAllAsClosed ) {\n                objectTypeContents.style.display = \"none\";\n                arrow.className = \"right-arrow\";\n            } else {\n                arrow.className = \"down-arrow\";\n            }\n        }\n    }\n\n    function getFunctionName( value: any ) : string {\n        let result: string;\n        const valueParts: string[] = value.toString().split( \"(\" );\n        const valueNameParts: string[] = valueParts[ 0 ].split( Char.space );\n\n        if ( valueNameParts.length === 2 ) {\n            result = valueNameParts[ 1 ];\n        } else {\n            result = valueNameParts[ 0 ];\n        }\n\n        result += \"()\";\n\n        return result;\n    }\n\n    function createComma( bindingOptions: BindingOptions, objectTypeValue: HTMLElement, isLastItem: boolean ) : void {\n        if ( bindingOptions.showCommas && !isLastItem ) {\n            DomElement.createWithHTML( objectTypeValue, \"span\", \"comma\", \",\" );\n        }\n    }\n    \n    function getIndexName( bindingOptions: BindingOptions, index: number, largestValue: number ) : string {\n        let result: string = bindingOptions.useZeroIndexingForArrays ? index.toString() : (index + 1).toString();\n    \n        if ( !bindingOptions.addArrayIndexPadding ) {\n            result = Data.String.padNumber( parseInt( result ), largestValue.toString().length );\n        }\n    \n        return result;\n    }\n    \n    function getFixedValue( value: number, length: number ) : string {\n        const regExp: RegExp = new RegExp( \"^-?\\\\d+(?:.\\\\d{0,\" + ( length || -1 ) + \"})?\" );\n    \n        return value.toString().match( regExp )?.[ 0 ] || Char.empty;\n    }\n    \n    function isHexColor( value: string ) : boolean {\n        let valid: boolean = value.length >= 2 && value.length <= 7;\n    \n        if ( valid && value[ 0 ] === Char.hash ) {\n            valid = isNaN( +value.substring( 1, value.length - 1 ) );\n        }\n    \n        return valid;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        let options: BindingOptions = Data.getDefaultObject( newOptions, {} as BindingOptions );\n        options.data = Data.getDefaultObject( options.data, null! );\n        options.showCounts = Data.getDefaultBoolean( options.showCounts, true );\n        options.useZeroIndexingForArrays = Data.getDefaultBoolean( options.useZeroIndexingForArrays, true );\n        options.dateTimeFormat = Data.getDefaultString( options.dateTimeFormat, \"{dd}{o} {mmmm} {yyyy} {hh}:{MM}:{ss}\" );\n        options.showArrowToggles = Data.getDefaultBoolean( options.showArrowToggles, true );\n        options.showStringQuotes = Data.getDefaultBoolean( options.showStringQuotes, true );\n        options.showAllAsClosed = Data.getDefaultBoolean( options.showAllAsClosed, false );\n        options.sortPropertyNames = Data.getDefaultBoolean( options.sortPropertyNames, true );\n        options.sortPropertyNamesInAlphabeticalOrder = Data.getDefaultBoolean( options.sortPropertyNamesInAlphabeticalOrder, true );\n        options.showCommas = Data.getDefaultBoolean( options.showCommas, false );\n        options.reverseArrayValues = Data.getDefaultBoolean( options.reverseArrayValues, false );\n        options.addArrayIndexPadding = Data.getDefaultBoolean( options.addArrayIndexPadding, false );\n        options.showValueColors = Data.getDefaultBoolean( options.showValueColors, true );\n        options.maximumDecimalPlaces = Data.getDefaultNumber( options.maximumDecimalPlaces, 2 );\n        options.maximumStringLength = Data.getDefaultNumber( options.maximumStringLength, 0 );\n        options.showStringHexColors = Data.getDefaultBoolean( options.showStringHexColors, false );\n\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionIgnore( options );\n        options = buildAttributeOptionCustomTriggers( options );\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = Data.getDefaultObject( options.title, {} as Title );\n        options.title!.text = Data.getDefaultString( options.title!.text, \"JsonTree.js\" );\n        options.title!.show = Data.getDefaultBoolean( options.title!.show, true );\n        options.title!.showTreeControls = Data.getDefaultBoolean( options.title!.showTreeControls, true );\n        options.title!.showCopyButton = Data.getDefaultBoolean( options.title!.showCopyButton, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionIgnore( options: BindingOptions ) : BindingOptions {\n        options.ignore = Data.getDefaultObject( options.ignore, {} as Ignore );\n        options.ignore!.nullValues = Data.getDefaultBoolean( options.ignore!.nullValues, false );\n        options.ignore!.functionValues = Data.getDefaultBoolean( options.ignore!.functionValues, false );\n        options.ignore!.unknownValues = Data.getDefaultBoolean( options.ignore!.unknownValues, false );\n        options.ignore!.booleanValues = Data.getDefaultBoolean( options.ignore!.booleanValues, false );\n        options.ignore!.decimalValues = Data.getDefaultBoolean( options.ignore!.decimalValues, false );\n        options.ignore!.numberValues = Data.getDefaultBoolean( options.ignore!.numberValues, false );\n        options.ignore!.stringValues = Data.getDefaultBoolean( options.ignore!.stringValues, false );\n        options.ignore!.dateValues = Data.getDefaultBoolean( options.ignore!.dateValues, false );\n        options.ignore!.objectValues = Data.getDefaultBoolean( options.ignore!.objectValues, false );\n        options.ignore!.arrayValues = Data.getDefaultBoolean( options.ignore!.arrayValues, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options: BindingOptions ) : BindingOptions {\n        options.events = Data.getDefaultObject( options.events, {} as Events );\n        options.events!.onBeforeRender = Data.getDefaultFunction( options.events!.onBeforeRender, null! );\n        options.events!.onRenderComplete = Data.getDefaultFunction( options.events!.onRenderComplete, null! );\n        options.events!.onValueClick = Data.getDefaultFunction( options.events!.onValueClick, null! );\n        options.events!.onRefresh = Data.getDefaultFunction( options.events!.onRefresh, null! );\n        options.events!.onCopyAll = Data.getDefaultFunction( options.events!.onCopyAll, null! );\n        options.events!.onOpenAll = Data.getDefaultFunction( options.events!.onOpenAll, null! );\n        options.events!.onCloseAll = Data.getDefaultFunction( options.events!.onCloseAll, null! );\n        options.events!.onDestroy = Data.getDefaultFunction( options.events!.onDestroy, null! );\n        options.events!.onBooleanRender = Data.getDefaultFunction( options.events!.onBooleanRender, null! );\n        options.events!.onDecimalRender = Data.getDefaultFunction( options.events!.onDecimalRender, null! );\n        options.events!.onNumberRender =Data.getDefaultFunction( options.events!.onNumberRender, null! );\n        options.events!.onStringRender = Data.getDefaultFunction( options.events!.onStringRender, null! );\n        options.events!.onDateRender = Data.getDefaultFunction( options.events!.onDateRender, null! );\n        options.events!.onFunctionRender = Data.getDefaultFunction( options.events!.onFunctionRender, null! );\n        options.events!.onNullRender = Data.getDefaultFunction( options.events!.onNullRender, null! );\n        options.events!.onUnknownRender = Data.getDefaultFunction( options.events!.onUnknownRender, null! );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : void {\n        if ( Is.definedFunction( triggerFunction ) ) {\n            triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1: any ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2: any ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText!.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Destroy\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function destroyElement( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n        bindingOptions._currentView.element.className = Char.empty;\n\n        fireCustomTriggerEvent( bindingOptions.events!.onDestroy!, bindingOptions._currentView.element );\n    }\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Configuration\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function buildDefaultConfiguration( newConfiguration: any = null ) : void {\n        _configuration = Data.getDefaultObject( newConfiguration, {} as Configuration );\n        _configuration.safeMode = Data.getDefaultBoolean( _configuration.safeMode, true );\n        _configuration.domElementTypes = Data.getDefaultStringOrArray( _configuration.domElementTypes, [ \"*\" ] );\n\n        buildDefaultConfigurationStrings();\n    }\n\n    function buildDefaultConfigurationStrings() : void {\n        _configuration.objectText = Data.getDefaultAnyString( _configuration.objectText, \"object\" );\n        _configuration.arrayText = Data.getDefaultAnyString( _configuration.arrayText, \"array\" );\n        _configuration.closeAllButtonText = Data.getDefaultAnyString( _configuration.closeAllButtonText, \"Close All\" );\n        _configuration.openAllButtonText = Data.getDefaultAnyString( _configuration.openAllButtonText, \"Open All\" );\n        _configuration.copyAllButtonText = Data.getDefaultAnyString( _configuration.copyAllButtonText, \"Copy All\" );\n        _configuration.objectErrorText = Data.getDefaultAnyString( _configuration.objectErrorText, \"Errors in object: {{error_1}}, {{error_2}}\" );\n        _configuration.attributeNotValidErrorText = Data.getDefaultAnyString( _configuration.attributeNotValidErrorText, \"The attribute '{{attribute_name}}' is not a valid object.\" );\n        _configuration.attributeNotSetErrorText = Data.getDefaultAnyString( _configuration.attributeNotSetErrorText, \"The attribute '{{attribute_name}}' has not been set correctly.\" );\n        _configuration.stText = Data.getDefaultAnyString( _configuration.stText, \"st\" );\n        _configuration.ndText = Data.getDefaultAnyString( _configuration.ndText, \"nd\" );\n        _configuration.rdText = Data.getDefaultAnyString( _configuration.rdText, \"rd\" );\n        _configuration.thText = Data.getDefaultAnyString( _configuration.thText, \"th\" );\n        _configuration.ellipsisText = Data.getDefaultAnyString( _configuration.ellipsisText, \"...\" );\n\n        if ( Is.invalidOptionArray( _configuration.dayNames, 7 ) ) {\n            _configuration.dayNames = [\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\",\n                \"Sunday\"\n            ];\n        }\n\n        if ( Is.invalidOptionArray( _configuration.dayNamesAbbreviated, 7 ) ) {\n            _configuration.dayNamesAbbreviated = [\n                \"Mon\",\n                \"Tue\",\n                \"Wed\",\n                \"Thu\",\n                \"Fri\",\n                \"Sat\",\n                \"Sun\"\n            ];\n        }\n\n        if ( Is.invalidOptionArray( _configuration.monthNames, 12 ) ) {\n            _configuration.monthNames = [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"\n            ];\n        }\n\n        if ( Is.invalidOptionArray( _configuration.monthNamesAbbreviated, 12 ) ) {\n            _configuration.monthNamesAbbreviated = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Sep\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n            ];\n        }\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_Data[ elementId ].options;\n    \n                renderControlContainer( bindingOptions );\n                fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n            }\n    \n            return _public;\n        },\n\n        refreshAll: function () : PublicApi {\n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    const bindingOptions: BindingOptions = _elements_Data[ elementId ].options;\n    \n                    renderControlContainer( bindingOptions );\n                    fireCustomTriggerEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n                }\n            }\n    \n            return _public;\n        },\n\n        render: function ( element: HTMLElement, options: object ) : PublicApi {\n            if ( Is.definedObject( element ) && Is.definedObject( options ) ) {\n                renderControl( renderBindingOptions( options, element ) );\n            }\n    \n            return _public;\n        },\n\n        renderAll: function () : PublicApi {\n            render();\n\n            return _public;\n        },\n\n        openAll: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                openAllNodes( _elements_Data[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n        closeAll: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                closeAllNodes( _elements_Data[ elementId ].options );\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroy: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                destroyElement( _elements_Data[ elementId ].options );\n    \n                delete _elements_Data[ elementId ];\n            }\n    \n            return _public;\n        },\n\n        destroyAll: function () : PublicApi {\n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    destroyElement( _elements_Data[ elementId ].options );\n                }\n            }\n\n            _elements_Data = {} as JsonTree;\n\n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: any ) : PublicApi {\n            if ( Is.definedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n                const newInternalConfiguration: any = _configuration;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && newInternalConfiguration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        newInternalConfiguration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    buildDefaultConfiguration( newInternalConfiguration );\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function () : string[] {\n            const result: string[] = [];\n        \n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    result.push( elementId );\n                }\n            }\n    \n            return result;\n        },\n\n        getVersion: function () : string {\n            return \"2.0.0\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize JsonTree.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        buildDefaultConfiguration();\n\n        document.addEventListener( \"DOMContentLoaded\", function() {\n            render();\n        } );\n\n        if ( !Is.defined( window.$jsontree ) ) {\n            window.$jsontree = _public;\n        }\n    } )();\n} )();"]}