{"version":3,"sources":["../src/ts/is.ts","../src/ts/data.ts","../src/jsontree.ts"],"names":["Is","Data","String","result"],"mappings":";;;AAgBO,IAAU;AAAA,CAAV,CAAUA,QAAV;AACI,WAAS,QAAS,OAAuB;AAC5C,WAAO,UAAU,QAAQ,UAAU,UAAa,MAAM,SAAS;AAAA,EACnE;AAFO,EAAAA,IAAS;AAIT,WAAS,cAAe,QAAwB;AACnD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW;AAAA,EAClD;AAFO,EAAAA,IAAS;AAIT,WAAS,eAAgB,QAAwB;AACpD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW;AAAA,EAClD;AAFO,EAAAA,IAAS;AAIT,WAAS,cAAe,QAAwB;AACnD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW;AAAA,EAClD;AAFO,EAAAA,IAAS;AAIT,WAAS,gBAAiB,QAAwB;AACrD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW;AAAA,EAClD;AAFO,EAAAA,IAAS;AAIT,WAAS,cAAe,QAAwB;AACnD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW;AAAA,EAClD;AAFO,EAAAA,IAAS;AAIT,WAAS,aAAc,QAAwB;AAClD,WAAO,cAAe,MAAO,KAAK,kBAAkB;AAAA,EACxD;AAFO,EAAAA,IAAS;AAIT,WAAS,YAAa,QAAwB;AACjD,WAAO,cAAe,MAAO,KAAK,kBAAkB;AAAA,EACxD;AAFO,EAAAA,IAAS;AAIT,WAAS,eAAgB,QAAwB;AACpD,WAAO,QAAS,MAAO,KAAK,OAAO,WAAW,YAAY,SAAS,MAAM;AAAA,EAC7E;AAFO,EAAAA,IAAS;AAIT,WAAS,mBAAoB,OAAY,gBAAwB,GAAc;AAClF,WAAO,CAAC,aAAc,KAAM,KAAK,MAAM,SAAS;AAAA,EACpD;AAFO,EAAAA,IAAS;AAAA,GArCH;;;ACCV,IAAU;AAAA,CAAV,CAAUC,UAAV;AACI,MAAU;AAAV,IAAUC,YAAV;AACI,aAAS,UAAmB;AAC/B,YAAMC,UAAmB,CAAC;AAE1B,eAAU,YAAoB,GAAG,YAAY,IAAI,aAAc;AAC3D,YAAK,cAAc,KAAK,cAAc,MAAM,cAAc,MAAM,cAAc,IAAK;AAC/E,UAAAA,QAAO,mBAAgB;AAAA,QAC3B;AAEA,cAAM,YAAoB,KAAK,MAAO,KAAK,OAAO,IAAI,EAAG,EAAE,SAAU,EAAG;AACxE,QAAAA,QAAO,KAAM,SAAU;AAAA,MAC3B;AAEA,aAAOA,QAAO,mBAAiB;AAAA,IACnC;AAbO,IAAAD,QAAS;AAeT,aAAS,UAAW,QAAgB,SAAiB,GAAa;AACrE,YAAM,eAAuB,OAAO,SAAS;AAC7C,UAAI,eAAuB;AAE3B,UAAK,aAAa,SAAS,QAAS;AAChC,cAAM,cAAwB,SAAS,aAAa,SAAW;AAE/D,uBAAe,MAAO,WAAY,EAAE,KAAM,GAAI,IAAI;AAAA,MACtD;AAEA,aAAO;AAAA,IACX;AAXO,IAAAA,QAAS;AAAA,KAhBH,SAAAD,MAAA,WAAAA,MAAA;AA8BV,WAAS,oBAAqB,OAAY,cAAgC;AAC7E,WAAO,OAAO,UAAU,WAAW,QAAQ;AAAA,EAC/C;AAFO,EAAAA,MAAS;AAIT,WAAS,iBAAkB,OAAY,cAAgC;AAC1E,WAAO,GAAG,cAAe,KAAM,IAAI,QAAQ;AAAA,EAC/C;AAFO,EAAAA,MAAS;AAIT,WAAS,kBAAmB,OAAY,cAAkC;AAC7E,WAAO,GAAG,eAAgB,KAAM,IAAI,QAAQ;AAAA,EAChD;AAFO,EAAAA,MAAS;AAIT,WAAS,iBAAkB,OAAY,cAAgC;AAC1E,WAAO,GAAG,cAAe,KAAM,IAAI,QAAQ;AAAA,EAC/C;AAFO,EAAAA,MAAS;AAIT,WAAS,mBAAoB,OAAY,cAA6B;AACzE,WAAO,GAAG,gBAAiB,KAAM,IAAI,QAAQ;AAAA,EACjD;AAFO,EAAAA,MAAS;AAIT,WAAS,gBAAiB,OAAY,cAA8B;AACvE,WAAO,GAAG,aAAc,KAAM,IAAI,QAAQ;AAAA,EAC9C;AAFO,EAAAA,MAAS;AAIT,WAAS,iBAAkB,OAAY,cAA6B;AACvE,WAAO,GAAG,cAAe,KAAM,IAAI,QAAQ;AAAA,EAC/C;AAFO,EAAAA,MAAS;AAIT,WAAS,wBAAyB,OAAY,cAAoC;AACrF,QAAIE,UAAmB;AAEvB,QAAK,GAAG,cAAe,KAAM,GAAI;AAC7B,YAAM,SAAmB,MAAM,SAAS,EAAE,qBAAkB;AAE5D,UAAK,OAAO,WAAW,GAAI;AACvB,gBAAQ;AAAA,MACZ,OAAO;AACH,QAAAA,UAAS;AAAA,MACb;AAAA,IAEJ,OAAO;AACH,MAAAA,UAAS,gBAAiB,OAAO,YAAa;AAAA,IAClD;AAEA,WAAOA;AAAA,EACX;AAjBO,EAAAF,MAAS;AAAA,GA3DH;;;ACOf,uBAAM;AAEJ,MAAI,iBAAgC,CAAC;AASrC,WAAS,sBAAuB,YAAmC;AAC/D,QAAI,UAAU,KAAK,iBAAkB,YAAY,CAAC,CAAoB;AACtE,YAAQ,OAAO,KAAK,iBAAkB,QAAQ,MAAM,IAAM;AAC1D,YAAQ,aAAa,KAAK,kBAAmB,QAAQ,YAAY,IAAK;AACtE,YAAQ,2BAA2B,KAAK,kBAAmB,QAAQ,0BAA0B,IAAK;AAClG,YAAQ,iBAAiB,KAAK,iBAAkB,QAAQ,gBAAgB,sCAAuC;AAC/G,YAAQ,mBAAmB,KAAK,kBAAmB,QAAQ,kBAAkB,IAAK;AAClF,YAAQ,mBAAmB,KAAK,kBAAmB,QAAQ,kBAAkB,IAAK;AAClF,YAAQ,kBAAkB,KAAK,kBAAmB,QAAQ,iBAAiB,KAAM;AACjF,YAAQ,oBAAoB,KAAK,kBAAmB,QAAQ,mBAAmB,IAAK;AACpF,YAAQ,uCAAuC,KAAK,kBAAmB,QAAQ,sCAAsC,IAAK;AAC1H,YAAQ,aAAa,KAAK,kBAAmB,QAAQ,YAAY,KAAM;AACvE,YAAQ,qBAAqB,KAAK,kBAAmB,QAAQ,oBAAoB,KAAM;AACvF,YAAQ,uBAAuB,KAAK,kBAAmB,QAAQ,sBAAsB,KAAM;AAC3F,YAAQ,kBAAkB,KAAK,kBAAmB,QAAQ,iBAAiB,IAAK;AAChF,YAAQ,uBAAuB,KAAK,iBAAkB,QAAQ,sBAAsB,CAAE;AACtF,YAAQ,sBAAsB,KAAK,iBAAkB,QAAQ,qBAAqB,CAAE;AACpF,YAAQ,sBAAsB,KAAK,kBAAmB,QAAQ,qBAAqB,KAAM;AAEzF,cAAU,0BAA2B,OAAQ;AAC7C,cAAU,2BAA4B,OAAQ;AAC9C,cAAU,mCAAoC,OAAQ;AAEtD,WAAO;AAAA,EACX;AAEA,WAAS,0BAA2B,SAA2C;AAC3E,YAAQ,QAAQ,KAAK,iBAAkB,QAAQ,OAAO,CAAC,CAAW;AAClE,YAAQ,MAAO,OAAO,KAAK,iBAAkB,QAAQ,MAAO,MAAM,aAAc;AAChF,YAAQ,MAAO,OAAO,KAAK,kBAAmB,QAAQ,MAAO,MAAM,IAAK;AACxE,YAAQ,MAAO,mBAAmB,KAAK,kBAAmB,QAAQ,MAAO,kBAAkB,IAAK;AAChG,YAAQ,MAAO,iBAAiB,KAAK,kBAAmB,QAAQ,MAAO,gBAAgB,KAAM;AAE7F,WAAO;AAAA,EACX;AAEA,WAAS,2BAA4B,SAA2C;AAC5E,YAAQ,SAAS,KAAK,iBAAkB,QAAQ,QAAQ,CAAC,CAAY;AACrE,YAAQ,OAAQ,aAAa,KAAK,kBAAmB,QAAQ,OAAQ,YAAY,KAAM;AACvF,YAAQ,OAAQ,iBAAiB,KAAK,kBAAmB,QAAQ,OAAQ,gBAAgB,KAAM;AAC/F,YAAQ,OAAQ,gBAAgB,KAAK,kBAAmB,QAAQ,OAAQ,eAAe,KAAM;AAC7F,YAAQ,OAAQ,gBAAgB,KAAK,kBAAmB,QAAQ,OAAQ,eAAe,KAAM;AAC7F,YAAQ,OAAQ,gBAAgB,KAAK,kBAAmB,QAAQ,OAAQ,eAAe,KAAM;AAC7F,YAAQ,OAAQ,eAAe,KAAK,kBAAmB,QAAQ,OAAQ,cAAc,KAAM;AAC3F,YAAQ,OAAQ,eAAe,KAAK,kBAAmB,QAAQ,OAAQ,cAAc,KAAM;AAC3F,YAAQ,OAAQ,aAAa,KAAK,kBAAmB,QAAQ,OAAQ,YAAY,KAAM;AACvF,YAAQ,OAAQ,eAAe,KAAK,kBAAmB,QAAQ,OAAQ,cAAc,KAAM;AAC3F,YAAQ,OAAQ,cAAc,KAAK,kBAAmB,QAAQ,OAAQ,aAAa,KAAM;AAEzF,WAAO;AAAA,EACX;AAEA,WAAS,mCAAoC,SAA2C;AACpF,YAAQ,SAAS,KAAK,iBAAkB,QAAQ,QAAQ,CAAC,CAAY;AACrE,YAAQ,OAAQ,iBAAiB,KAAK,mBAAoB,QAAQ,OAAQ,gBAAgB,IAAM;AAChG,YAAQ,OAAQ,mBAAmB,KAAK,mBAAoB,QAAQ,OAAQ,kBAAkB,IAAM;AACpG,YAAQ,OAAQ,eAAe,KAAK,mBAAoB,QAAQ,OAAQ,cAAc,IAAM;AAC5F,YAAQ,OAAQ,YAAY,KAAK,mBAAoB,QAAQ,OAAQ,WAAW,IAAM;AACtF,YAAQ,OAAQ,YAAY,KAAK,mBAAoB,QAAQ,OAAQ,WAAW,IAAM;AACtF,YAAQ,OAAQ,YAAY,KAAK,mBAAoB,QAAQ,OAAQ,WAAW,IAAM;AACtF,YAAQ,OAAQ,aAAa,KAAK,mBAAoB,QAAQ,OAAQ,YAAY,IAAM;AACxF,YAAQ,OAAQ,YAAY,KAAK,mBAAoB,QAAQ,OAAQ,WAAW,IAAM;AACtF,YAAQ,OAAQ,kBAAkB,KAAK,mBAAoB,QAAQ,OAAQ,iBAAiB,IAAM;AAClG,YAAQ,OAAQ,kBAAkB,KAAK,mBAAoB,QAAQ,OAAQ,iBAAiB,IAAM;AAClG,YAAQ,OAAQ,iBAAgB,KAAK,mBAAoB,QAAQ,OAAQ,gBAAgB,IAAM;AAC/F,YAAQ,OAAQ,iBAAiB,KAAK,mBAAoB,QAAQ,OAAQ,gBAAgB,IAAM;AAChG,YAAQ,OAAQ,eAAe,KAAK,mBAAoB,QAAQ,OAAQ,cAAc,IAAM;AAC5F,YAAQ,OAAQ,mBAAmB,KAAK,mBAAoB,QAAQ,OAAQ,kBAAkB,IAAM;AACpG,YAAQ,OAAQ,eAAe,KAAK,mBAAoB,QAAQ,OAAQ,cAAc,IAAM;AAC5F,YAAQ,OAAQ,kBAAkB,KAAK,mBAAoB,QAAQ,OAAQ,iBAAiB,IAAM;AAElG,WAAO;AAAA,EACX;AASA,WAAS,uBAAwB,oBAA8B,MAAsB;AACjF,QAAK,GAAG,gBAAiB,eAAgB,GAAI;AACzC,sBAAgB,MAAO,MAAM,CAAC,EAAE,MAAM,KAAM,MAAM,CAAE,CAAE;AAAA,IAC1D;AAAA,EACJ;AASA,WAAS,oBAAqB,cAAmC;AAC7D,UAAM,SAAuB;AAAA,MACzB,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ;AAEA,QAAI;AACA,UAAK,GAAG,cAAe,YAAa,GAAI;AACpC,eAAO,SAAS,KAAK,MAAO,YAAa;AAAA,MAC7C;AAAA,IAEJ,SAAU,IAAU;AAChB,UAAI;AACA,eAAO,SAAS,KAAM,MAAM,eAAe,GAAI;AAE/C,YAAK,GAAG,gBAAiB,OAAO,MAAO,GAAI;AACvC,iBAAO,SAAS,OAAO,OAAO;AAAA,QAClC;AAAA,MAEJ,SAAU,IAAU;AAChB,YAAK,CAAC,eAAe,UAAW;AAC5B,kBAAQ,MAAO,eAAe,gBAAiB,QAAS,eAAgB,GAAG,OAAQ,EAAE,QAAS,eAAgB,GAAG,OAAQ,CAAE;AAC3H,iBAAO,SAAS;AAAA,QACpB;AAEA,eAAO,SAAS;AAAA,MACpB;AAAA,IACJ;AAEA,WAAO;AAAA,EACX;AASA,QAAM,UAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOvB,SAAS,SAAW,WAA+B;AAC/C,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,YAAY,WAAuB;AAC/B,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,QAAQ,SAAW,SAAsB,SAA6B;AAClE,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,WAAW,WAAuB;AAC9B,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,SAAS,SAAW,WAA+B;AAC/C,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,UAAU,SAAW,WAA+B;AAChD,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,SAAS,SAAW,WAA+B;AAC/C,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,YAAY,WAAuB;AAC/B,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,kBAAkB,SAAW,eAAgC;AACzD,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,QAAQ,WAAsB;AAC1B,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,IAEA,YAAY,WAAoB;AAC5B,YAAM,IAAI,MAAM,2BAA2B;AAAA,IAC/C;AAAA,EACJ;AASA,EAAE,uBAAM;AAAA,EAER,GAAI;AACR,GAAI","sourcesContent":["/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        is.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function definedDecimal( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\" && object % 1 !== 0;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        data.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Data {\n    export namespace String {\n        export function newGuid() : string {\n            const result: string[] = [];\n    \n            for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n                if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                    result.push( Char.dash );\n                }\n    \n                const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n                result.push( character );\n            }\n    \n            return result.join( Char.empty );\n        }\n    \n        export function padNumber( number: number, length: number = 1 ) : string {\n            const numberString: string = number.toString();\n            let numberResult: string = numberString;\n    \n            if ( numberString.length < length ) {\n                const arrayLength: number = ( length - numberString.length ) + 1;\n    \n                numberResult = Array( arrayLength ).join( \"0\" ) + numberString;\n            }\n    \n            return numberResult;\n        }\n    }\n\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: string[] ) : string[] {\n        let result: string[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        jsontree.ts\n * @version     v2.0.0\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { PublicApi } from \"./ts/api\";\nimport { Data } from \"./ts/data\";\nimport { Is } from \"./ts/is\";\nimport { BindingOptions, Events, Ignore, Title, type Configuration } from \"./ts/type\";\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    \n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Options\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function buildAttributeOptions( newOptions: any ) : BindingOptions {\n        var options = Data.getDefaultObject( newOptions, {} as BindingOptions );\n        options.data = Data.getDefaultObject( options.data, null! );\n        options.showCounts = Data.getDefaultBoolean( options.showCounts, true );\n        options.useZeroIndexingForArrays = Data.getDefaultBoolean( options.useZeroIndexingForArrays, true );\n        options.dateTimeFormat = Data.getDefaultString( options.dateTimeFormat, \"{dd}{o} {mmmm} {yyyy} {hh}:{MM}:{ss}\" );\n        options.showArrowToggles = Data.getDefaultBoolean( options.showArrowToggles, true );\n        options.showStringQuotes = Data.getDefaultBoolean( options.showStringQuotes, true );\n        options.showAllAsClosed = Data.getDefaultBoolean( options.showAllAsClosed, false );\n        options.sortPropertyNames = Data.getDefaultBoolean( options.sortPropertyNames, true );\n        options.sortPropertyNamesInAlphabeticalOrder = Data.getDefaultBoolean( options.sortPropertyNamesInAlphabeticalOrder, true );\n        options.showCommas = Data.getDefaultBoolean( options.showCommas, false );\n        options.reverseArrayValues = Data.getDefaultBoolean( options.reverseArrayValues, false );\n        options.addArrayIndexPadding = Data.getDefaultBoolean( options.addArrayIndexPadding, false );\n        options.showValueColors = Data.getDefaultBoolean( options.showValueColors, true );\n        options.maximumDecimalPlaces = Data.getDefaultNumber( options.maximumDecimalPlaces, 2 );\n        options.maximumStringLength = Data.getDefaultNumber( options.maximumStringLength, 0 );\n        options.showStringHexColors = Data.getDefaultBoolean( options.showStringHexColors, false );\n\n        options = buildAttributeOptionTitle( options );\n        options = buildAttributeOptionIgnore( options );\n        options = buildAttributeOptionCustomTriggers( options );\n\n        return options;\n    }\n\n    function buildAttributeOptionTitle( options: BindingOptions ) : BindingOptions {\n        options.title = Data.getDefaultObject( options.title, {} as Title );\n        options.title!.text = Data.getDefaultString( options.title!.text, \"JsonTree.js\" );\n        options.title!.show = Data.getDefaultBoolean( options.title!.show, true );\n        options.title!.showTreeControls = Data.getDefaultBoolean( options.title!.showTreeControls, true );\n        options.title!.showCopyButton = Data.getDefaultBoolean( options.title!.showCopyButton, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionIgnore( options: BindingOptions ) : BindingOptions {\n        options.ignore = Data.getDefaultObject( options.ignore, {} as Ignore );\n        options.ignore!.nullValues = Data.getDefaultBoolean( options.ignore!.nullValues, false );\n        options.ignore!.functionValues = Data.getDefaultBoolean( options.ignore!.functionValues, false );\n        options.ignore!.unknownValues = Data.getDefaultBoolean( options.ignore!.unknownValues, false );\n        options.ignore!.booleanValues = Data.getDefaultBoolean( options.ignore!.booleanValues, false );\n        options.ignore!.decimalValues = Data.getDefaultBoolean( options.ignore!.decimalValues, false );\n        options.ignore!.numberValues = Data.getDefaultBoolean( options.ignore!.numberValues, false );\n        options.ignore!.stringValues = Data.getDefaultBoolean( options.ignore!.stringValues, false );\n        options.ignore!.dateValues = Data.getDefaultBoolean( options.ignore!.dateValues, false );\n        options.ignore!.objectValues = Data.getDefaultBoolean( options.ignore!.objectValues, false );\n        options.ignore!.arrayValues = Data.getDefaultBoolean( options.ignore!.arrayValues, false );\n\n        return options;\n    }\n\n    function buildAttributeOptionCustomTriggers( options: BindingOptions ) : BindingOptions {\n        options.events = Data.getDefaultObject( options.events, {} as Events );\n        options.events!.onBeforeRender = Data.getDefaultFunction( options.events!.onBeforeRender, null! );\n        options.events!.onRenderComplete = Data.getDefaultFunction( options.events!.onRenderComplete, null! );\n        options.events!.onValueClick = Data.getDefaultFunction( options.events!.onValueClick, null! );\n        options.events!.onRefresh = Data.getDefaultFunction( options.events!.onRefresh, null! );\n        options.events!.onCopyAll = Data.getDefaultFunction( options.events!.onCopyAll, null! );\n        options.events!.onOpenAll = Data.getDefaultFunction( options.events!.onOpenAll, null! );\n        options.events!.onCloseAll = Data.getDefaultFunction( options.events!.onCloseAll, null! );\n        options.events!.onDestroy = Data.getDefaultFunction( options.events!.onDestroy, null! );\n        options.events!.onBooleanRender = Data.getDefaultFunction( options.events!.onBooleanRender, null! );\n        options.events!.onDecimalRender = Data.getDefaultFunction( options.events!.onDecimalRender, null! );\n        options.events!.onNumberRender =Data.getDefaultFunction( options.events!.onNumberRender, null! );\n        options.events!.onStringRender = Data.getDefaultFunction( options.events!.onStringRender, null! );\n        options.events!.onDateRender = Data.getDefaultFunction( options.events!.onDateRender, null! );\n        options.events!.onFunctionRender = Data.getDefaultFunction( options.events!.onFunctionRender, null! );\n        options.events!.onNullRender = Data.getDefaultFunction( options.events!.onNullRender, null! );\n        options.events!.onUnknownRender = Data.getDefaultFunction( options.events!.onUnknownRender, null! );\n\n        return options;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Triggering Custom Events\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function fireCustomTriggerEvent( triggerFunction: Function, ...args : any[] ) : void {\n        if ( Is.definedFunction( triggerFunction ) ) {\n            triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1: any ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2: any ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.objectErrorText!.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        refreshAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        render: function ( element: HTMLElement, options: Object ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        renderAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        openAll: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        closeAll: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroy: function ( elementId: string ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        destroyAll: function (): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( configuration: any ): PublicApi {\n            throw new Error(\"Function not implemented.\");\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function (): string[] {\n            throw new Error(\"Function not implemented.\");\n        },\n\n        getVersion: function (): string {\n            throw new Error(\"Function not implemented.\");\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize JsonTree.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n\n    } )();\n} )();"]}