{"version":3,"sources":["../src/ts/data/is.ts","../src/ts/data/default.ts","../src/ts/dom/dom.ts","../src/ts/data/str.ts","../src/ts/data/datetime.ts","../src/ts/constant.ts","../src/ts/options/binding.ts","../src/ts/options/config.ts","../src/ts/area/trigger.ts","../src/jsontree.ts"],"names":["Is","Default","result","DomElement","Str","DateTime","Constants","Binding","Options","Config","Trigger"],"mappings":"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","sourcesContent":["/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        is.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Is {\n    export function defined( value: any ) : boolean {\n        return value !== null && value !== undefined && value.toString() !== Char.empty;\n    }\n\n    export function definedObject( object: any ) : boolean {\n        return defined( object ) && typeof object === \"object\";\n    }\n\n    export function definedBoolean( object: any ) : boolean {\n        return defined( object ) && typeof object === \"boolean\";\n    }\n\n    export function definedString( object: any ) : boolean {\n        return defined( object ) && typeof object === \"string\";\n    }\n\n    export function definedFunction( object: any ) : boolean {\n        return defined( object ) && typeof object === \"function\";\n    }\n\n    export function definedNumber( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\";\n    }\n\n    export function definedArray( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Array;\n    }\n\n    export function definedDate( object: any ) : boolean {\n        return definedObject( object ) && object instanceof Date;\n    }\n\n    export function definedDecimal( object: any ) : boolean {\n        return defined( object ) && typeof object === \"number\" && object % 1 !== 0;\n    }\n\n    export function invalidOptionArray( array: any, minimumLength: number = 1 ) : boolean {\n        return !definedArray( array ) || array.length < minimumLength;\n    }\n\n    export function hexColor( value: string ) : boolean {\n        let valid: boolean = value.length >= 2 && value.length <= 7;\n    \n        if ( valid && value[ 0 ] === Char.hash ) {\n            valid = isNaN( +value.substring( 1, value.length - 1 ) );\n        }\n    \n        return valid;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        default.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\nimport { Is } from \"./is\";\n\n\nexport namespace Default {\n    export function getDefaultAnyString( value: any, defaultValue: string ) : string {\n        return typeof value === \"string\" ? value : defaultValue;\n    }\n\n    export function getDefaultString( value: any, defaultValue: string ) : string {\n        return Is.definedString( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultBoolean( value: any, defaultValue: boolean ) : boolean {\n        return Is.definedBoolean( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultNumber( value: any, defaultValue: number ) : number {\n        return Is.definedNumber( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultFunction( value: any, defaultValue: object ) : any {\n        return Is.definedFunction( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultArray( value: any, defaultValue: any[] ) : any[] {\n        return Is.definedArray( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultObject( value: any, defaultValue: object ) : any {\n        return Is.definedObject( value ) ? value : defaultValue;\n    }\n\n    export function getDefaultStringOrArray( value: any, defaultValue: string[] ) : string[] {\n        let result: string[] = defaultValue;\n\n        if ( Is.definedString( value ) ) {\n            const values: string[] = value.toString().split( Char.space );\n\n            if ( values.length === 0 ) {\n                value = defaultValue;\n            } else {\n                result = values;\n            }\n\n        } else {\n            result = getDefaultArray( value, defaultValue );\n        }\n\n        return result;\n    }\n\n    export function getFixedDecimalPlacesValue( value: number, decimalPlaces: number ) : string {\n        const regExp: RegExp = new RegExp( \"^-?\\\\d+(?:.\\\\d{0,\" + ( decimalPlaces || -1 ) + \"})?\" );\n    \n        return value.toString().match( regExp )?.[ 0 ] || Char.empty;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        dom.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"../data/enum\";\nimport { Is } from \"../data/is\";\n\n\nexport namespace DomElement {\n    export function create( container: HTMLElement, type: string, className: string = Char.empty, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const nodeType: string = type.toLowerCase();\n        const isText: boolean = nodeType === \"text\";\n\n        let result: any = isText ? document.createTextNode( Char.empty ) : document.createElement( nodeType );\n\n        if ( Is.defined( className ) ) {\n            result.className = className;\n        }\n\n        if ( Is.defined( beforeNode ) ) {\n            container.insertBefore( result, beforeNode );\n        } else {\n            container.appendChild( result );\n        }\n\n        return result;\n    }\n\n    export function createWithHTML( container: HTMLElement, type: string, className: string, html: string, beforeNode: HTMLElement = null! ) : HTMLElement {\n        const element: HTMLElement = create( container, type, className, beforeNode );\n        element.innerHTML = html;\n\n        return element;\n    }\n\n    export function addClass( element: HTMLElement, className: string ) : void {\n        element.classList.add( className );\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        str.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Char } from \"./enum\";\n\n\nexport namespace Str {\n    export function newGuid() : string {\n        const result: string[] = [];\n\n        for ( let charIndex: number = 0; charIndex < 32; charIndex++ ) {\n            if ( charIndex === 8 || charIndex === 12 || charIndex === 16 || charIndex === 20 ) {\n                result.push( Char.dash );\n            }\n\n            const character: string = Math.floor( Math.random() * 16 ).toString( 16 );\n            result.push( character );\n        }\n\n        return result.join( Char.empty );\n    }\n\n    export function padNumber( number: number, length: number = 1 ) : string {\n        const numberString: string = number.toString();\n        let numberResult: string = numberString;\n\n        if ( numberString.length < length ) {\n            const arrayLength: number = ( length - numberString.length ) + 1;\n\n            numberResult = Array( arrayLength ).join( \"0\" ) + numberString;\n        }\n\n        return numberResult;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        datetime.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { type Configuration } from \"../type\";\nimport { Str } from \"./str\";\n\n\nexport namespace DateTime {\n    export function getWeekdayNumber( date: Date ) : number {\n        return date.getDay() - 1 < 0 ? 6 : date.getDay() - 1;\n    }\n\n    export function getDayOrdinal( configuration: Configuration, value: number ) : string {\n        let result: string = configuration.text!.thText!;\n\n        if ( value === 31 || value === 21 || value === 1 ) {\n            result = configuration.text!.stText!;\n        } else if ( value === 22 || value === 2 ) {\n            result = configuration.text!.ndText!;\n        } else if ( value === 23 || value === 3 ) {\n            result = configuration.text!.rdText!;\n        }\n\n        return result;\n    }\n\n    export function getCustomFormattedDateText( configuration: Configuration, date: Date , dateFormat: string) : string {\n        let result: string = dateFormat;\n        const weekDayNumber: number = getWeekdayNumber( date );\n\n        result = result.replace( \"{hh}\", Str.padNumber( date.getHours(), 2 ) );\n        result = result.replace( \"{h}\", date.getHours().toString() );\n    \n        result = result.replace( \"{MM}\", Str.padNumber( date.getMinutes(), 2 ) );\n        result = result.replace( \"{M}\", date.getMinutes().toString() );\n    \n        result = result.replace( \"{ss}\", Str.padNumber( date.getSeconds(), 2 ) );\n        result = result.replace( \"{s}\", date.getSeconds().toString() );\n    \n        result = result.replace( \"{dddd}\", configuration.text!.dayNames![ weekDayNumber ] );\n        result = result.replace( \"{ddd}\", configuration.text!.dayNamesAbbreviated![ weekDayNumber ] );\n        result = result.replace( \"{dd}\", Str.padNumber( date.getDate() ) );\n        result = result.replace( \"{d}\", date.getDate().toString() );\n    \n        result = result.replace( \"{o}\", getDayOrdinal( configuration, date.getDate() ) );\n    \n        result = result.replace( \"{mmmm}\", configuration.text!.monthNames![ date.getMonth() ] );\n        result = result.replace( \"{mmm}\", configuration.text!.monthNamesAbbreviated![ date.getMonth() ] );\n        result = result.replace( \"{mm}\", Str.padNumber( date.getMonth() + 1 ) );\n        result = result.replace( \"{m}\", ( date.getMonth() + 1 ).toString() );\n    \n        result = result.replace( \"{yyyy}\", date.getFullYear().toString() );\n        result = result.replace( \"{yyy}\", date.getFullYear().toString().substring( 1 ) );\n        result = result.replace( \"{yy}\", date.getFullYear().toString().substring( 2 ) );\n        result = result.replace( \"{y}\", Number.parseInt( date.getFullYear().toString().substring( 2 ) ).toString() );\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        constant.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nexport namespace Constants {\n    export const JSONTREE_JS_ATTRIBUTE_NAME = \"data-jsontree-js\";\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        binding.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type BindingOptions,\n    type BindingOptionsEvents,\n    type BindingOptionsIgnore,\n    type BindingOptionsTitle } from \"../type\";\n\nimport { Default } from \"../data/default\";\n\n\nexport namespace Binding {\n    export namespace Options {\n        export function get( newOptions: any ) : BindingOptions {\n            let options: BindingOptions = Default.getDefaultObject( newOptions, {} as BindingOptions );\n            options.data = Default.getDefaultObject( options.data, null! );\n            options.showCounts = Default.getDefaultBoolean( options.showCounts, true );\n            options.useZeroIndexingForArrays = Default.getDefaultBoolean( options.useZeroIndexingForArrays, true );\n            options.dateTimeFormat = Default.getDefaultString( options.dateTimeFormat, \"{dd}{o} {mmmm} {yyyy} {hh}:{MM}:{ss}\" );\n            options.showArrowToggles = Default.getDefaultBoolean( options.showArrowToggles, true );\n            options.showStringQuotes = Default.getDefaultBoolean( options.showStringQuotes, true );\n            options.showAllAsClosed = Default.getDefaultBoolean( options.showAllAsClosed, false );\n            options.sortPropertyNames = Default.getDefaultBoolean( options.sortPropertyNames, true );\n            options.sortPropertyNamesInAlphabeticalOrder = Default.getDefaultBoolean( options.sortPropertyNamesInAlphabeticalOrder, true );\n            options.showCommas = Default.getDefaultBoolean( options.showCommas, false );\n            options.reverseArrayValues = Default.getDefaultBoolean( options.reverseArrayValues, false );\n            options.addArrayIndexPadding = Default.getDefaultBoolean( options.addArrayIndexPadding, false );\n            options.showValueColors = Default.getDefaultBoolean( options.showValueColors, true );\n            options.maximumDecimalPlaces = Default.getDefaultNumber( options.maximumDecimalPlaces, 2 );\n            options.maximumStringLength = Default.getDefaultNumber( options.maximumStringLength, 0 );\n            options.showStringHexColors = Default.getDefaultBoolean( options.showStringHexColors, false );\n    \n            options = getTitle( options );\n            options = getIgnore( options );\n            options = getCustomTriggers( options );\n    \n            return options;\n        }\n    \n        function getTitle( options: BindingOptions ) : BindingOptions {\n            options.title = Default.getDefaultObject( options.title, {} as BindingOptionsTitle );\n            options.title!.text = Default.getDefaultString( options.title!.text, \"JsonTree.js\" );\n            options.title!.show = Default.getDefaultBoolean( options.title!.show, true );\n            options.title!.showTreeControls = Default.getDefaultBoolean( options.title!.showTreeControls, true );\n            options.title!.showCopyButton = Default.getDefaultBoolean( options.title!.showCopyButton, false );\n    \n            return options;\n        }\n    \n        function getIgnore( options: BindingOptions ) : BindingOptions {\n            options.ignore = Default.getDefaultObject( options.ignore, {} as BindingOptionsIgnore );\n            options.ignore!.nullValues = Default.getDefaultBoolean( options.ignore!.nullValues, false );\n            options.ignore!.functionValues = Default.getDefaultBoolean( options.ignore!.functionValues, false );\n            options.ignore!.unknownValues = Default.getDefaultBoolean( options.ignore!.unknownValues, false );\n            options.ignore!.booleanValues = Default.getDefaultBoolean( options.ignore!.booleanValues, false );\n            options.ignore!.decimalValues = Default.getDefaultBoolean( options.ignore!.decimalValues, false );\n            options.ignore!.numberValues = Default.getDefaultBoolean( options.ignore!.numberValues, false );\n            options.ignore!.stringValues = Default.getDefaultBoolean( options.ignore!.stringValues, false );\n            options.ignore!.dateValues = Default.getDefaultBoolean( options.ignore!.dateValues, false );\n            options.ignore!.objectValues = Default.getDefaultBoolean( options.ignore!.objectValues, false );\n            options.ignore!.arrayValues = Default.getDefaultBoolean( options.ignore!.arrayValues, false );\n    \n            return options;\n        }\n    \n        function getCustomTriggers( options: BindingOptions ) : BindingOptions {\n            options.events = Default.getDefaultObject( options.events, {} as BindingOptionsEvents );\n            options.events!.onBeforeRender = Default.getDefaultFunction( options.events!.onBeforeRender, null! );\n            options.events!.onRenderComplete = Default.getDefaultFunction( options.events!.onRenderComplete, null! );\n            options.events!.onValueClick = Default.getDefaultFunction( options.events!.onValueClick, null! );\n            options.events!.onRefresh = Default.getDefaultFunction( options.events!.onRefresh, null! );\n            options.events!.onCopyAll = Default.getDefaultFunction( options.events!.onCopyAll, null! );\n            options.events!.onOpenAll = Default.getDefaultFunction( options.events!.onOpenAll, null! );\n            options.events!.onCloseAll = Default.getDefaultFunction( options.events!.onCloseAll, null! );\n            options.events!.onDestroy = Default.getDefaultFunction( options.events!.onDestroy, null! );\n            options.events!.onBooleanRender = Default.getDefaultFunction( options.events!.onBooleanRender, null! );\n            options.events!.onDecimalRender = Default.getDefaultFunction( options.events!.onDecimalRender, null! );\n            options.events!.onNumberRender =Default.getDefaultFunction( options.events!.onNumberRender, null! );\n            options.events!.onStringRender = Default.getDefaultFunction( options.events!.onStringRender, null! );\n            options.events!.onDateRender = Default.getDefaultFunction( options.events!.onDateRender, null! );\n            options.events!.onFunctionRender = Default.getDefaultFunction( options.events!.onFunctionRender, null! );\n            options.events!.onNullRender = Default.getDefaultFunction( options.events!.onNullRender, null! );\n            options.events!.onUnknownRender = Default.getDefaultFunction( options.events!.onUnknownRender, null! );\n    \n            return options;\n        }\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        config.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { ConfigurationText, type Configuration } from \"../type\";\nimport { Default } from \"../data/default\";\nimport { Is } from \"../data/is\";\n\n\nexport namespace Config {\n    export namespace Options {\n        export function get( newConfiguration: any = null ) : Configuration {\n            let configuration: Configuration = Default.getDefaultObject( newConfiguration, {} as Configuration );\n            configuration.safeMode = Default.getDefaultBoolean( configuration.safeMode, true );\n            configuration.domElementTypes = Default.getDefaultStringOrArray( configuration.domElementTypes, [ \"*\" ] );\n    \n            configuration = getText( configuration );\n\n            return configuration;\n        }\n    \n        function getText( configuration: Configuration ) : Configuration {\n            configuration.text = Default.getDefaultObject( configuration.text, {} as ConfigurationText );\n            configuration.text!.objectText = Default.getDefaultAnyString( configuration.text!.objectText, \"object\" );\n            configuration.text!.arrayText = Default.getDefaultAnyString( configuration.text!.arrayText, \"array\" );\n            configuration.text!.closeAllButtonText = Default.getDefaultAnyString( configuration.text!.closeAllButtonText, \"Close All\" );\n            configuration.text!.openAllButtonText = Default.getDefaultAnyString( configuration.text!.openAllButtonText, \"Open All\" );\n            configuration.text!.copyAllButtonText = Default.getDefaultAnyString( configuration.text!.copyAllButtonText, \"Copy All\" );\n            configuration.text!.objectErrorText = Default.getDefaultAnyString( configuration.text!.objectErrorText, \"Errors in object: {{error_1}}, {{error_2}}\" );\n            configuration.text!.attributeNotValidErrorText = Default.getDefaultAnyString( configuration.text!.attributeNotValidErrorText, \"The attribute '{{attribute_name}}' is not a valid object.\" );\n            configuration.text!.attributeNotSetErrorText = Default.getDefaultAnyString( configuration.text!.attributeNotSetErrorText, \"The attribute '{{attribute_name}}' has not been set correctly.\" );\n            configuration.text!.stText = Default.getDefaultAnyString( configuration.text!.stText, \"st\" );\n            configuration.text!.ndText = Default.getDefaultAnyString( configuration.text!.ndText, \"nd\" );\n            configuration.text!.rdText = Default.getDefaultAnyString( configuration.text!.rdText, \"rd\" );\n            configuration.text!.thText = Default.getDefaultAnyString( configuration.text!.thText, \"th\" );\n            configuration.text!.ellipsisText = Default.getDefaultAnyString( configuration.text!.ellipsisText, \"...\" );\n    \n            if ( Is.invalidOptionArray( configuration.text!.dayNames, 7 ) ) {\n                configuration.text!.dayNames = [\n                    \"Monday\",\n                    \"Tuesday\",\n                    \"Wednesday\",\n                    \"Thursday\",\n                    \"Friday\",\n                    \"Saturday\",\n                    \"Sunday\"\n                ];\n            }\n    \n            if ( Is.invalidOptionArray( configuration.text!.dayNamesAbbreviated, 7 ) ) {\n                configuration.text!.dayNamesAbbreviated = [\n                    \"Mon\",\n                    \"Tue\",\n                    \"Wed\",\n                    \"Thu\",\n                    \"Fri\",\n                    \"Sat\",\n                    \"Sun\"\n                ];\n            }\n    \n            if ( Is.invalidOptionArray( configuration.text!.monthNames, 12 ) ) {\n                configuration.text!.monthNames = [\n                    \"January\",\n                    \"February\",\n                    \"March\",\n                    \"April\",\n                    \"May\",\n                    \"June\",\n                    \"July\",\n                    \"August\",\n                    \"September\",\n                    \"October\",\n                    \"November\",\n                    \"December\"\n                ];\n            }\n    \n            if ( Is.invalidOptionArray( configuration.text!.monthNamesAbbreviated, 12 ) ) {\n                configuration.text!.monthNamesAbbreviated = [\n                    \"Jan\",\n                    \"Feb\",\n                    \"Mar\",\n                    \"Apr\",\n                    \"May\",\n                    \"Jun\",\n                    \"Jul\",\n                    \"Aug\",\n                    \"Sep\",\n                    \"Oct\",\n                    \"Nov\",\n                    \"Dec\"\n                ];\n            }\n\n            return configuration;\n        }\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        trigger.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport { Is } from \"../data/is\";\n\n\nexport namespace Trigger {\n    export function customEvent<Type>( triggerFunction: Function, ...args : any[] ) : Type {\n        let result: any = null;\n\n        if ( Is.definedFunction( triggerFunction ) ) {\n            result = triggerFunction.apply( null, [].slice.call( args, 0 ) );\n        }\n\n        return result;\n    }\n}","/**\n * JsonTree.js\n * \n * A lightweight JavaScript library that generates customizable tree views to better visualize JSON data.\n * \n * @file        jsontree.ts\n * @version     v2.0.1\n * @author      Bunoon\n * @license     MIT License\n * @copyright   Bunoon 2024\n */\n\n\nimport {\n    type BindingOptions,\n    type Configuration, \n    type BindingOptionsCurrentView } from \"./ts/type\";\n\nimport { type PublicApi } from \"./ts/api\";\nimport { Default } from \"./ts/data/default\";\nimport { Is } from \"./ts/data/is\";\nimport { DomElement } from \"./ts/dom/dom\";\nimport { Char } from \"./ts/data/enum\";\nimport { DateTime } from \"./ts/data/datetime\";\nimport { Constants } from \"./ts/constant\";\nimport { Str } from \"./ts/data/str\";\nimport { Binding } from \"./ts/options/binding\";\nimport { Config } from \"./ts/options/config\";\nimport { Trigger } from \"./ts/area/trigger\";\n\n\ntype StringToJson = {\n    parsed: boolean;\n    object: any;\n};\n\ntype JsonTreeData = Record<string, BindingOptions>;\n\n\n( () => {\n    // Variables: Configuration\n    let _configuration: Configuration = {} as Configuration;\n\n    // Variables: Data\n    let _elements_Data: JsonTreeData = {} as JsonTreeData;\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Rendering\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function render() : void {\n        const tagTypes: string[] = _configuration.domElementTypes as string[];\n        const tagTypesLength: number = tagTypes.length;\n\n        for ( let tagTypeIndex: number = 0; tagTypeIndex < tagTypesLength; tagTypeIndex++ ) {\n            const domElements: HTMLCollectionOf<Element> = document.getElementsByTagName( tagTypes[ tagTypeIndex ] );\n            const elements: HTMLElement[] = [].slice.call( domElements );\n            const elementsLength: number = elements.length;\n\n            for ( let elementIndex: number = 0; elementIndex < elementsLength; elementIndex++ ) {\n                if ( !renderElement( elements[ elementIndex ] ) ) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function renderElement( element: HTMLElement ) : boolean {\n        let result: boolean = true;\n\n        if ( Is.defined( element ) && element.hasAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME ) ) {\n            const bindingOptionsData: string = element.getAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME )!;\n\n            if ( Is.definedString( bindingOptionsData ) ) {\n                const bindingOptions: StringToJson = getObjectFromString( bindingOptionsData );\n\n                if ( bindingOptions.parsed && Is.definedObject( bindingOptions.object ) ) {\n                    renderControl( renderBindingOptions( bindingOptions.object, element ) );\n\n                } else {\n                    if ( !_configuration.safeMode ) {\n                        console.error( _configuration.text!.attributeNotValidErrorText!.replace( \"{{attribute_name}}\", Constants.JSONTREE_JS_ATTRIBUTE_NAME ) );\n                        result = false;\n                    }\n                }\n\n            } else {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.text!.attributeNotSetErrorText!.replace( \"{{attribute_name}}\", Constants.JSONTREE_JS_ATTRIBUTE_NAME ) );\n                    result = false;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    function renderBindingOptions( data: any, element: HTMLElement ) : BindingOptions {\n        const bindingOptions: BindingOptions = Binding.Options.get( data );\n        bindingOptions._currentView = {} as BindingOptionsCurrentView;\n        bindingOptions._currentView.element = element;\n\n        return bindingOptions;\n    }\n\n    function renderControl( bindingOptions: BindingOptions ) : void {\n        Trigger.customEvent( bindingOptions.events!.onBeforeRender!, bindingOptions._currentView.element );\n\n        if ( !Is.definedString( bindingOptions._currentView.element.id ) ) {\n            bindingOptions._currentView.element.id = Str.newGuid();\n        }\n\n        bindingOptions._currentView.element.className = \"json-tree-js\";\n        bindingOptions._currentView.element.removeAttribute( Constants.JSONTREE_JS_ATTRIBUTE_NAME );\n\n        if ( !_elements_Data.hasOwnProperty( bindingOptions._currentView.element.id ) ) {\n            _elements_Data[ bindingOptions._currentView.element.id ] = bindingOptions;\n        }\n\n        renderControlContainer( bindingOptions );\n        Trigger.customEvent( bindingOptions.events!.onRenderComplete!, bindingOptions._currentView.element );\n    }\n\n    function renderControlContainer( bindingOptions: BindingOptions ) : void {\n        const data: any = _elements_Data[ bindingOptions._currentView.element.id ].data;\n\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n\n        renderControlTitleBar( bindingOptions );\n\n        if ( Is.definedObject( data ) && !Is.definedArray( data ) ) {\n            renderObject( bindingOptions._currentView.element, bindingOptions, data );\n        } else if ( Is.definedArray( data ) ) {\n            renderArray( bindingOptions._currentView.element, bindingOptions, data );\n        }\n    }\n\n    \n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Title Bar\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderControlTitleBar( bindingOptions: BindingOptions ) : void {\n        if ( bindingOptions.title!.show || bindingOptions.title!.showTreeControls || bindingOptions.title!.showCopyButton ) {\n            const titleBar: HTMLElement = DomElement.create( bindingOptions._currentView.element, \"div\", \"title-bar\" );\n            const controls: HTMLElement = DomElement.create( titleBar, \"div\", \"controls\" );\n        \n            if ( bindingOptions.title!.show ) {\n                DomElement.createWithHTML( titleBar, \"div\", \"title\", bindingOptions.title!.text!, controls );\n            }\n\n            if ( bindingOptions.title!.showCopyButton ) {\n                const copy: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"copy-all\", _configuration.text!.copyAllButtonText! );\n\n                copy.onclick = () => {\n                    const copyData: string = JSON.stringify( _elements_Data[ bindingOptions._currentView.element.id ].data );\n\n                    navigator.clipboard.writeText( copyData );\n\n                    Trigger.customEvent( bindingOptions.events!.onCopyAll!, copyData );\n                };\n            }\n\n            if ( bindingOptions.title!.showTreeControls ) {\n                const openAll: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"openAll\", _configuration.text!.openAllButtonText! );\n                const closeAll: HTMLElement = DomElement.createWithHTML( controls, \"button\", \"closeAll\", _configuration.text!.closeAllButtonText! );\n\n                openAll.onclick = () => {\n                    openAllNodes( bindingOptions );\n                };\n\n                closeAll.onclick = () => {\n                    closeAllNodes( bindingOptions );\n                };\n            }\n        }\n    }\n\n    function openAllNodes( bindingOptions: BindingOptions ) : void {\n        bindingOptions.showAllAsClosed = false;\n\n        renderControlContainer( bindingOptions );\n        Trigger.customEvent( bindingOptions.events!.onOpenAll!, bindingOptions._currentView.element );\n    }\n\n    function closeAllNodes( bindingOptions: BindingOptions ) : void {\n        bindingOptions.showAllAsClosed = true;\n\n        renderControlContainer( bindingOptions );\n        Trigger.customEvent( bindingOptions.events!.onCloseAll!, bindingOptions._currentView.element );\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Render:  Tree\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function renderObject( container: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const objectTypeTitle: HTMLElement = DomElement.create( container, \"div\", \"object-type-title\" );\n        const objectTypeContents: HTMLElement = DomElement.create( container, \"div\", \"object-type-contents\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeTitle, \"div\", \"down-arrow\" ) : null!;\n        const propertyCount: number = renderObjectValues( arrow, objectTypeContents, bindingOptions, data );\n\n        DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"object\" : Char.empty, _configuration.text!.objectText! );\n\n        if ( bindingOptions.showCounts && propertyCount > 0 ) {\n            DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"object count\" : \"count\", \"{\" + propertyCount + \"}\" );\n        }\n    }\n\n    function renderArray( container: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const objectTypeTitle: HTMLElement = DomElement.create( container, \"div\", \"object-type-title\" );\n        const objectTypeContents: HTMLElement = DomElement.create( container, \"div\", \"object-type-contents\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeTitle, \"div\", \"down-arrow\" ) : null!;\n\n        DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"array\" : Char.empty, _configuration.text!.arrayText! );\n\n        renderArrayValues( arrow, objectTypeContents, bindingOptions, data );\n\n        if ( bindingOptions.showCounts ) {\n            DomElement.createWithHTML( objectTypeTitle, \"span\", bindingOptions.showValueColors ? \"array count\" : \"count\", \"[\" + data.length + \"]\" );\n        }\n    }\n\n    function renderObjectValues( arrow: HTMLElement, objectTypeContents: HTMLElement, bindingOptions: BindingOptions, data: any ) : number {\n        let propertyCount: number = 0;\n        let properties: string[] = [];\n\n        for ( let key in data ) {\n            if ( data.hasOwnProperty( key ) ) {\n                properties.push( key );\n            }\n        }\n\n        if ( bindingOptions.sortPropertyNames ) {\n            properties = properties.sort();\n\n            if ( !bindingOptions.sortPropertyNamesInAlphabeticalOrder ) {\n                properties = properties.reverse();\n            }\n        }\n\n        const propertiesLength: number = properties.length;\n\n        for ( let propertyIndex: number = 0; propertyIndex < propertiesLength; propertyIndex++ ) {\n            const propertyName: string = properties[ propertyIndex ];\n\n            if ( data.hasOwnProperty( propertyName ) ) {\n                renderValue( objectTypeContents, bindingOptions, propertyName, data[ propertyName ], propertyIndex === propertiesLength - 1 );\n                propertyCount++;\n            }\n        }\n\n        addArrowEvent( bindingOptions, arrow, objectTypeContents );\n\n        return propertyCount;\n    }\n\n    function renderArrayValues( arrow: HTMLElement, objectTypeContents: HTMLElement, bindingOptions: BindingOptions, data: any ) : void {\n        const dataLength: number = data.length;\n\n        if ( !bindingOptions.reverseArrayValues ) {\n            for ( let dataIndex1: number = 0; dataIndex1 < dataLength; dataIndex1++ ) {\n                renderValue( objectTypeContents, bindingOptions, getIndexName( bindingOptions, dataIndex1, dataLength ), data[ dataIndex1 ], dataIndex1 === dataLength - 1 );\n            }\n\n        } else {\n            for ( let dataIndex2: number = dataLength; dataIndex2--; ) {\n                renderValue( objectTypeContents, bindingOptions, getIndexName( bindingOptions, dataIndex2, dataLength ), data[ dataIndex2 ], dataIndex2 === 0 );\n            }\n        }\n\n        addArrowEvent( bindingOptions, arrow, objectTypeContents );\n    }\n\n    function renderValue( container: HTMLElement, bindingOptions: BindingOptions, name: string, value: any, isLastItem: boolean ) : void {\n        const objectTypeValue: HTMLElement = DomElement.create( container, \"div\", \"object-type-value\" );\n        const arrow: HTMLElement = bindingOptions.showArrowToggles ? DomElement.create( objectTypeValue, \"div\", \"no-arrow\" ) : null!;\n        let valueClass: string = null!;\n        let valueElement: HTMLElement = null!;\n        let ignored: boolean = false;\n        let type: string = null!;\n        let addClickEvent: boolean = true;\n\n        DomElement.createWithHTML( objectTypeValue, \"span\", \"title\", name );\n        DomElement.createWithHTML( objectTypeValue, \"span\", \"split\", \":\" );\n\n        if ( !Is.defined( value ) ) {\n            if ( !bindingOptions.ignore!.nullValues ) {\n                valueClass = bindingOptions.showValueColors ? \"null\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, \"null\" );\n                addClickEvent = false;\n\n                if ( Is.definedFunction( bindingOptions.events!.onNullRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onNullRender!, valueElement );\n                }\n\n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedFunction( value ) ) {\n            if ( !bindingOptions.ignore!.functionValues ) {\n                valueClass = bindingOptions.showValueColors ? \"function\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, getFunctionName( value ) );\n                type = \"function\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onFunctionRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onFunctionRender!, valueElement );\n                }\n            \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedBoolean( value ) ) {\n            if ( !bindingOptions.ignore!.booleanValues ) {\n                valueClass = bindingOptions.showValueColors ? \"boolean\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value );\n                type = \"boolean\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onBooleanRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onBooleanRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedDecimal( value ) ) {\n            if ( !bindingOptions.ignore!.decimalValues ) {\n                const newValue: string = Default.getFixedDecimalPlacesValue( value, bindingOptions.maximumDecimalPlaces! );\n\n                valueClass = bindingOptions.showValueColors ? \"decimal\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, newValue );\n                type = \"decimal\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onDecimalRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onDecimalRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedNumber( value ) ) {\n            if ( !bindingOptions.ignore!.numberValues ) {\n                valueClass = bindingOptions.showValueColors ? \"number\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value );\n                type = \"number\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onNumberRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onNumberRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedString( value ) ) {\n            if ( !bindingOptions.ignore!.stringValues ) {\n                let color: string = null!;\n\n                if ( bindingOptions.showValueColors && bindingOptions.showStringHexColors && Is.hexColor( value ) ) {\n                    color = value;\n\n                } else {\n                    if ( bindingOptions.maximumStringLength! > 0 && value.length > bindingOptions.maximumStringLength! ) {\n                        value = value.substring( 0, bindingOptions.maximumStringLength ) + _configuration.text!.ellipsisText;\n                    }\n                }\n\n                const newStringValue: string = bindingOptions.showStringQuotes ? \"\\\"\" + value + \"\\\"\" : value;\n    \n                valueClass = bindingOptions.showValueColors ? \"string\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, newStringValue );\n                type = \"string\";\n\n                if ( Is.definedString( color ) ) {\n                    valueElement.style.color = color;\n                }\n    \n                if ( Is.definedFunction( bindingOptions.events!.onStringRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onStringRender!, valueElement );\n                }\n                \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedDate( value ) ) {\n            if ( !bindingOptions.ignore!.dateValues ) {\n                valueClass = bindingOptions.showValueColors ? \"date\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, DateTime.getCustomFormattedDateText( _configuration, value, bindingOptions.dateTimeFormat! ) );\n                type = \"date\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onDateRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onDateRender!, valueElement );\n                }\n    \n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n\n        } else if ( Is.definedObject( value ) && !Is.definedArray( value ) ) {\n            if ( !bindingOptions.ignore!.objectValues ) {\n                const objectTitle: HTMLElement = DomElement.create( objectTypeValue, \"span\", bindingOptions.showValueColors ? \"object\" : Char.empty );\n                const objectTypeContents: HTMLElement = DomElement.create( objectTypeValue, \"div\", \"object-type-contents\" );\n                const propertyCount: number = renderObjectValues( arrow, objectTypeContents, bindingOptions, value );\n\n                DomElement.createWithHTML( objectTitle, \"span\", \"title\", _configuration.text!.objectText! );\n\n                if ( bindingOptions.showCounts && propertyCount > 0 ) {\n                    DomElement.createWithHTML( objectTitle, \"span\", \"count\", \"{\" + propertyCount + \"}\" );\n                }\n\n                createComma( bindingOptions, objectTitle, isLastItem );\n\n                type = \"object\";\n\n            } else {\n                ignored = true;\n            }\n\n\n        } else if ( Is.definedArray( value ) ) {\n            if ( !bindingOptions.ignore!.arrayValues ) {\n                const arrayTitle: HTMLElement = DomElement.create( objectTypeValue, \"span\", bindingOptions.showValueColors ? \"array\" : Char.empty );\n                const arrayTypeContents: HTMLElement = DomElement.create( objectTypeValue, \"div\", \"object-type-contents\" );\n\n                DomElement.createWithHTML( arrayTitle, \"span\", \"title\", _configuration.text!.arrayText! );\n\n                if ( bindingOptions.showCounts ) {\n                    DomElement.createWithHTML( arrayTitle, \"span\", \"count\", \"[\" + value.length + \"]\" );\n                }\n\n                createComma( bindingOptions, arrayTitle, isLastItem );\n                renderArrayValues( arrow, arrayTypeContents, bindingOptions, value );\n\n                type = \"array\";\n                \n            } else {\n                ignored = true;\n            }\n\n        } else {\n            if ( !bindingOptions.ignore!.unknownValues ) {\n                valueClass = bindingOptions.showValueColors ? \"unknown\" : Char.empty;\n                valueElement = DomElement.createWithHTML( objectTypeValue, \"span\", valueClass, value.toString() );\n                type = \"unknown\";\n\n                if ( Is.definedFunction( bindingOptions.events!.onUnknownRender ) ) {\n                    Trigger.customEvent( bindingOptions.events!.onUnknownRender!, valueElement );\n                }\n\n                createComma( bindingOptions, objectTypeValue, isLastItem );\n\n            } else {\n                ignored = true;\n            }\n        }\n\n        if ( ignored ) {\n            container.removeChild( objectTypeValue );\n            \n        } else {\n            if ( Is.defined( valueElement ) ) {\n                addValueClickEvent( bindingOptions, valueElement, value, type, addClickEvent );\n            }\n        }\n    }\n\n    function addValueClickEvent( bindingOptions: BindingOptions, valueElement: HTMLElement, value: any, type: string, addClickEvent: boolean ) : void {\n        if ( addClickEvent && Is.definedFunction( bindingOptions.events!.onValueClick ) ) {\n            valueElement.onclick = () => {\n                Trigger.customEvent( bindingOptions.events!.onValueClick!, value, type );\n            };\n\n        } else {\n            DomElement.addClass( valueElement, \"no-hover\" );\n        }\n    }\n\n    function addArrowEvent( bindingOptions: BindingOptions, arrow: HTMLElement, objectTypeContents: HTMLElement ) : void {\n        if ( Is.defined( arrow ) ) {\n            arrow.onclick = () => {\n                if ( arrow.className === \"down-arrow\" ) {\n                    objectTypeContents.style.display = \"none\";\n                    arrow.className = \"right-arrow\";\n                } else {\n                    objectTypeContents.style.display = \"block\";\n                    arrow.className = \"down-arrow\";\n                }\n            };\n\n            if ( bindingOptions.showAllAsClosed ) {\n                objectTypeContents.style.display = \"none\";\n                arrow.className = \"right-arrow\";\n            } else {\n                arrow.className = \"down-arrow\";\n            }\n        }\n    }\n\n    function getFunctionName( value: any ) : string {\n        let result: string;\n        const valueParts: string[] = value.toString().split( \"(\" );\n        const valueNameParts: string[] = valueParts[ 0 ].split( Char.space );\n\n        if ( valueNameParts.length === 2 ) {\n            result = valueNameParts[ 1 ];\n        } else {\n            result = valueNameParts[ 0 ];\n        }\n\n        result += \"()\";\n\n        return result;\n    }\n\n    function createComma( bindingOptions: BindingOptions, objectTypeValue: HTMLElement, isLastItem: boolean ) : void {\n        if ( bindingOptions.showCommas && !isLastItem ) {\n            DomElement.createWithHTML( objectTypeValue, \"span\", \"comma\", \",\" );\n        }\n    }\n    \n    function getIndexName( bindingOptions: BindingOptions, index: number, largestValue: number ) : string {\n        let result: string = bindingOptions.useZeroIndexingForArrays ? index.toString() : ( index + 1 ).toString();\n    \n        if ( !bindingOptions.addArrayIndexPadding ) {\n            result = Str.padNumber( parseInt( result ), largestValue.toString().length );\n        }\n    \n        return result;\n    }\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Default Parameter/Option Handling\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    function getObjectFromString( objectString: any ) : StringToJson {\n        const result: StringToJson = {\n            parsed: true,\n            object: null\n        } as StringToJson;\n\n        try {\n            if ( Is.definedString( objectString ) ) {\n                result.object = JSON.parse( objectString );\n            }\n\n        } catch ( e1: any ) {\n            try {\n                result.object = eval( \"(\" + objectString + \")\" );\n\n                if ( Is.definedFunction( result.object ) ) {\n                    result.object = result.object();\n                }\n                \n            } catch ( e2: any ) {\n                if ( !_configuration.safeMode ) {\n                    console.error( _configuration.text!.objectErrorText!.replace( \"{{error_1}}\",  e1.message ).replace( \"{{error_2}}\",  e2.message ) );\n                    result.parsed = false;\n                }\n                \n                result.object = null;\n            }\n        }\n\n        return result;\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:  Helpers:  Destroy\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    function destroyElement( bindingOptions: BindingOptions ) : void {\n        bindingOptions._currentView.element.innerHTML = Char.empty;\n        bindingOptions._currentView.element.className = Char.empty;\n\n        Trigger.customEvent( bindingOptions.events!.onDestroy!, bindingOptions._currentView.element );\n    }\n\n\n\t/*\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t * Public API Functions:\n\t * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\t */\n\n    const _public: PublicApi = {\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Manage Instances\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        refresh: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                const bindingOptions: BindingOptions = _elements_Data[ elementId ];\n    \n                renderControlContainer( bindingOptions );\n                Trigger.customEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n            }\n    \n            return _public;\n        },\n\n        refreshAll: function () : PublicApi {\n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    const bindingOptions: BindingOptions = _elements_Data[ elementId ];\n    \n                    renderControlContainer( bindingOptions );\n                    Trigger.customEvent( bindingOptions.events!.onRefresh!, bindingOptions._currentView.element );\n                }\n            }\n    \n            return _public;\n        },\n\n        render: function ( element: HTMLElement, options: object ) : PublicApi {\n            if ( Is.definedObject( element ) && Is.definedObject( options ) ) {\n                renderControl( renderBindingOptions( options, element ) );\n            }\n    \n            return _public;\n        },\n\n        renderAll: function () : PublicApi {\n            render();\n\n            return _public;\n        },\n\n        openAll: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                openAllNodes( _elements_Data[ elementId ] );\n            }\n    \n            return _public;\n        },\n\n        closeAll: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                closeAllNodes( _elements_Data[ elementId ] );\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Destroying\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        destroy: function ( elementId: string ) : PublicApi {\n            if ( Is.definedString( elementId ) && _elements_Data.hasOwnProperty( elementId ) ) {\n                destroyElement( _elements_Data[ elementId ] );\n    \n                delete _elements_Data[ elementId ];\n            }\n    \n            return _public;\n        },\n\n        destroyAll: function () : PublicApi {\n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    destroyElement( _elements_Data[ elementId ] );\n                }\n            }\n\n            _elements_Data = {} as JsonTreeData;\n\n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Configuration\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        setConfiguration: function ( newConfiguration: any ) : PublicApi {\n            if ( Is.definedObject( newConfiguration ) ) {\n                let configurationHasChanged: boolean = false;\n                const newInternalConfiguration: any = _configuration;\n            \n                for ( let propertyName in newConfiguration ) {\n                    if ( newConfiguration.hasOwnProperty( propertyName ) && _configuration.hasOwnProperty( propertyName ) && newInternalConfiguration[ propertyName ] !== newConfiguration[ propertyName ] ) {\n                        newInternalConfiguration[ propertyName ] = newConfiguration[ propertyName ];\n                        configurationHasChanged = true;\n                    }\n                }\n        \n                if ( configurationHasChanged ) {\n                    _configuration = Config.Options.get( newInternalConfiguration );\n                }\n            }\n    \n            return _public;\n        },\n\n\n        /*\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         * Public API Functions:  Additional Data\n         * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n         */\n\n        getIds: function () : string[] {\n            const result: string[] = [];\n        \n            for ( let elementId in _elements_Data ) {\n                if ( _elements_Data.hasOwnProperty( elementId ) ) {\n                    result.push( elementId );\n                }\n            }\n    \n            return result;\n        },\n\n        getVersion: function () : string {\n            return \"2.0.1\";\n        }\n    };\n\n\n    /*\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     * Initialize JsonTree.js\n     * ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n     */\n\n    ( () => {\n        _configuration = Config.Options.get();\n\n        document.addEventListener( \"DOMContentLoaded\", function() {\n            render();\n        } );\n\n        if ( !Is.defined( window.$jsontree ) ) {\n            window.$jsontree = _public;\n        }\n    } )();\n} )();"]}